"use strict";(self.webpackChunktarget_machines_write_up=self.webpackChunktarget_machines_write_up||[]).push([[4794],{41377:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>t,frontMatter:()=>p,metadata:()=>i,toc:()=>c});var i=s(59444),o=s(74848),a=s(28453);const p={slug:"Hackthebox Battleground Scripts",title:"Hackthebox Battleground \u5999\u5999\u547d\u4ee4",authors:"Randark",toc_max_heading_level:5,tags:["Incident-Response"]},r=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Web \u8fdb\u7a0b\u9632\u8303",id:"web-\u8fdb\u7a0b\u9632\u8303",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"\u6de6\u4ed6"}),"\n",(0,o.jsx)(n.h2,{id:"web-\u8fdb\u7a0b\u9632\u8303",children:"Web \u8fdb\u7a0b\u9632\u8303"}),"\n",(0,o.jsx)(n.p,{children:"\u4ee5 Nginx \u4e3a\u4f8b\uff0c\u63d0\u53d6 Nginx \u7684\u4e3b\u8fdb\u7a0b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'root@jmt-projekt:~# ps auxe | grep nginx | pgrep -f "nginx: master process"\n3568483\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u67e5\u770b\u8fdb\u7a0b\u6811"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"root@jmt-projekt:~# pstree -p 3568483\nnginx(3568483)\u2500\u252c\u2500nginx(3568484)\n               \u2514\u2500nginx(3568485)\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u7b5b\u9009\u6240\u6709\u5b50\u8fdb\u7a0b\u7684 pid"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"root@jmt-projekt:~# pstree -p 3568483 | grep -o '([0-9]\\+)' | grep -o '[0-9]\\+'\n3568483\n3568484\n3568485\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u68c0\u67e5\u6240\u6709\u5b50\u8fdb\u7a0b\u7684 process name"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"root@jmt-projekt:~# pstree -p 3568483 | grep -o '([0-9]\\+)' | grep -o '[0-9]\\+' | xargs -I{} sh -c 'ps -o comm= -p {}'\nnginx\nnginx\nnginx\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u663e\u793a\u6240\u6709\u975e nginx \u7684 process \u7684 pid"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pstree -p 3568483 | grep -o '([0-9]\\+)' | grep -o '[0-9]\\+' | xargs -I{} sh -c 'ps -o comm= -p {} | grep -qv nginx && echo {}'\nNone\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\u7136\u540e\u8c03\u7528 ",(0,o.jsx)(n.code,{children:"kill -9"})," \u5f3a\u5236\u7ec8\u6b62\u8fdb\u7a0b"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pstree -p 3568483 | grep -o '([0-9]\\+)' | grep -o '[0-9]\\+' | xargs -I{} sh -c 'ps -o comm= -p {} | grep -qv nginx && kill -9 {}'\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u811a\u672c"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# \u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\nLOG_FILE="/var/log/nginx_kill_suspicious.log"\n\n# \u51fd\u6570\uff1a\u8bb0\u5f55\u65e5\u5fd7\nlog() {\n    local message="$1"\n    echo "$(date \'+%Y-%m-%d %H:%M:%S\') - $message" | tee -a "$LOG_FILE"\n}\n\n# \u4e3b\u5faa\u73af\nwhile true; do\n    # \u83b7\u53d6 nginx \u4e3b\u8fdb\u7a0b\u7684 PID\n    nginx_master_pid=$(ps auxe | grep nginx | pgrep -f "nginx: master process")\n\n    if [ -z "$nginx_master_pid" ]; then\n        log "\u672a\u627e\u5230 nginx \u4e3b\u8fdb\u7a0b\uff0c\u8df3\u8fc7\u672c\u6b21\u68c0\u6d4b\u3002"\n    else\n        log "\u68c0\u6d4b\u5230 nginx \u4e3b\u8fdb\u7a0b PID: $nginx_master_pid"\n\n        # \u83b7\u53d6 nginx \u4e3b\u8fdb\u7a0b\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\n        all_child_pids=$(pstree -p "$nginx_master_pid" | grep -o \'([0-9]\\+)\' | grep -o \'[0-9]\\+\')\n\n        if [ -z "$all_child_pids" ]; then\n            log "\u672a\u68c0\u6d4b\u5230\u5b50\u8fdb\u7a0b\u3002"\n        else\n            # \u5217\u51fa\u6240\u6709\u5b50\u8fdb\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\n            log "\u6240\u6709\u5b50\u8fdb\u7a0b\u4fe1\u606f\uff1a"\n            for pid in $all_child_pids; do\n                process_info=$(ps -o pid,comm,args= -p "$pid" --no-headers)\n                log "PID: $process_info"\n            done\n\n            # \u83b7\u53d6 nginx \u4e3b\u8fdb\u7a0b\u7684\u6240\u6709\u975e nginx \u5b50\u8fdb\u7a0b\n            suspicious_pids=$(echo "$all_child_pids" | xargs -I{} sh -c \'ps -o comm= -p {} | grep -qv nginx && echo {}\')\n\n            if [ -z "$suspicious_pids" ]; then\n                log "\u672a\u68c0\u6d4b\u5230\u53ef\u7591\u8fdb\u7a0b\u3002"\n            else\n                # \u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b\u5e76\u8bb0\u5f55\u65e5\u5fd7\n                for pid in $suspicious_pids; do\n                    process_info=$(ps -o pid,comm,args= -p "$pid" --no-headers)\n                    log "\u68c0\u6d4b\u5230\u53ef\u7591\u8fdb\u7a0b PID: $process_info\uff0c\u6b63\u5728\u6740\u6b7b..."\n                    kill -9 "$pid"\n                    if [ $? -eq 0 ]; then\n                        log "\u6210\u529f\u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b PID: $pid"\n                    else\n                        log "\u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b PID: $pid \u5931\u8d25\uff01"\n                    fi\n                done\n            fi\n        fi\n    fi\n\n    # \u7b49\u5f85 1 \u79d2\n    sleep 1\ndone\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\u540c\u6837\u7684\uff0c\u53ef\u4ee5\u4e3a ",(0,o.jsx)(n.code,{children:"apache2"})," \u5b9e\u73b0\u76f8\u540c\u7684\u6548\u679c"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# \u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\nLOG_FILE="/var/log/apache2_kill_suspicious.log"\n\n# \u51fd\u6570\uff1a\u8bb0\u5f55\u65e5\u5fd7\nlog() {\n    local message="$1"\n    echo "$(date \'+%Y-%m-%d %H:%M:%S\') - $message" | tee -a "$LOG_FILE"\n}\n\n# \u4e3b\u5faa\u73af\nwhile true; do\n    # \u83b7\u53d6 apache2 \u4e3b\u8fdb\u7a0b\u7684 PID\n    apache2_master_pid=$(ps auxe | grep apache2 | pgrep -f "apache2")\n\n    if [ -z "$apache2_master_pid" ]; then\n        log "\u672a\u627e\u5230 apache2 \u4e3b\u8fdb\u7a0b\uff0c\u8df3\u8fc7\u672c\u6b21\u68c0\u6d4b\u3002"\n    else\n        log "\u68c0\u6d4b\u5230 apache2 \u4e3b\u8fdb\u7a0b PID: $apache2_master_pid"\n\n        # \u83b7\u53d6 apache2 \u4e3b\u8fdb\u7a0b\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\n        all_child_pids=$(pstree -p "$apache2_master_pid" | grep -o \'([0-9]\\+)\' | grep -o \'[0-9]\\+\')\n\n        if [ -z "$all_child_pids" ]; then\n            log "\u672a\u68c0\u6d4b\u5230\u5b50\u8fdb\u7a0b\u3002"\n        else\n            # \u5217\u51fa\u6240\u6709\u5b50\u8fdb\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\n            log "\u6240\u6709\u5b50\u8fdb\u7a0b\u4fe1\u606f\uff1a"\n            for pid in $all_child_pids; do\n                process_info=$(ps -o pid,comm,args= -p "$pid" --no-headers)\n                log "PID: $process_info"\n            done\n\n            # \u83b7\u53d6 apache2 \u4e3b\u8fdb\u7a0b\u7684\u6240\u6709\u975e apache2 \u5b50\u8fdb\u7a0b\n            suspicious_pids=$(echo "$all_child_pids" | xargs -I{} sh -c \'ps -o comm= -p {} | grep -qv apache2 && echo {}\')\n\n            if [ -z "$suspicious_pids" ]; then\n                log "\u672a\u68c0\u6d4b\u5230\u53ef\u7591\u8fdb\u7a0b\u3002"\n            else\n                # \u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b\u5e76\u8bb0\u5f55\u65e5\u5fd7\n                for pid in $suspicious_pids; do\n                    process_info=$(ps -o pid,comm,args= -p "$pid" --no-headers)\n                    log "\u68c0\u6d4b\u5230\u53ef\u7591\u8fdb\u7a0b PID: $process_info\uff0c\u6b63\u5728\u6740\u6b7b..."\n                    kill -9 "$pid"\n                    if [ $? -eq 0 ]; then\n                        log "\u6210\u529f\u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b PID: $pid"\n                    else\n                        log "\u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b PID: $pid \u5931\u8d25\uff01"\n                    fi\n                done\n            fi\n        fi\n    fi\n\n    # \u7b49\u5f85 1 \u79d2\n    sleep 1\ndone\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u5c06\u4e24\u4e2a\u811a\u672c\u5408\u5e76\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u811a\u672c"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# \u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\nLOG_FILE="/var/log/web_kill_suspicious.log"\n\n# \u51fd\u6570\uff1a\u8bb0\u5f55\u65e5\u5fd7\nlog() {\n    local message="$1"\n    echo "$(date \'+%Y-%m-%d %H:%M:%S\') - $message" | tee -a "$LOG_FILE"\n}\n\n# \u51fd\u6570\uff1a\u68c0\u6d4b\u5e76\u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b\ncheck_and_kill_suspicious() {\n    local service_name="$1"\n    local master_process_keyword="$2"\n\n    # \u83b7\u53d6\u4e3b\u8fdb\u7a0b\u7684 PID\n    local master_pid=$(pgrep -f "$master_process_keyword" | head -n 1)\n\n    if [ -z "$master_pid" ]; then\n        log "\u672a\u627e\u5230 $service_name \u4e3b\u8fdb\u7a0b\uff0c\u8df3\u8fc7\u672c\u6b21\u68c0\u6d4b\u3002"\n    else\n        log "\u68c0\u6d4b\u5230 $service_name \u4e3b\u8fdb\u7a0b PID: $master_pid"\n\n        # \u83b7\u53d6\u4e3b\u8fdb\u7a0b\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\n        local all_child_pids=$(pstree -p "$master_pid" | grep -o \'([0-9]\\+)\' | grep -o \'[0-9]\\+\')\n\n        if [ -z "$all_child_pids" ]; then\n            log "\u672a\u68c0\u6d4b\u5230 $service_name \u5b50\u8fdb\u7a0b\u3002"\n        else\n            # \u5217\u51fa\u6240\u6709\u5b50\u8fdb\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\n            log "$service_name \u6240\u6709\u5b50\u8fdb\u7a0b\u4fe1\u606f\uff1a"\n            for pid in $all_child_pids; do\n                local process_info=$(ps -o pid,comm,args= -p "$pid" --no-headers)\n                log "PID: $process_info"\n            done\n\n            # \u83b7\u53d6\u4e3b\u8fdb\u7a0b\u7684\u6240\u6709\u975e\u670d\u52a1\u5b50\u8fdb\u7a0b\n            local suspicious_pids=$(echo "$all_child_pids" | xargs -I{} sh -c \'ps -o comm= -p {} | grep -qv \'"$service_name"\' && echo {}\')\n\n            if [ -z "$suspicious_pids" ]; then\n                log "\u672a\u68c0\u6d4b\u5230 $service_name \u53ef\u7591\u8fdb\u7a0b\u3002"\n            else\n                # \u6740\u6b7b\u53ef\u7591\u8fdb\u7a0b\u5e76\u8bb0\u5f55\u65e5\u5fd7\n                for pid in $suspicious_pids; do\n                    local process_info=$(ps -o pid,comm,args= -p "$pid" --no-headers)\n                    log "\u68c0\u6d4b\u5230 $service_name \u53ef\u7591\u8fdb\u7a0b PID: $process_info\uff0c\u6b63\u5728\u6740\u6b7b..."\n                    kill -9 "$pid"\n                    if [ $? -eq 0 ]; then\n                        log "\u6210\u529f\u6740\u6b7b $service_name \u53ef\u7591\u8fdb\u7a0b PID: $pid"\n                    else\n                        log "\u6740\u6b7b $service_name \u53ef\u7591\u8fdb\u7a0b PID: $pid \u5931\u8d25\uff01"\n                    fi\n                done\n            fi\n        fi\n    fi\n}\n\n# \u4e3b\u5faa\u73af\nwhile true; do\n    # \u68c0\u6d4b nginx\n    check_and_kill_suspicious "nginx" "nginx: master process"\n\n    # \u68c0\u6d4b apache2\n    check_and_kill_suspicious "apache2" "apache2"\n\n    # \u7b49\u5f85 1 \u79d2\n    sleep 1\ndone\n'})}),"\n",(0,o.jsx)(n.p,{children:"\u76f4\u63a5\u6295\u9012\u547d\u4ee4"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"echo H4sIAH4WAWgA/7VV32/bVBR+919xcJM60eZk6VszRbzwq1IRSDyhUUWufZNYdezMTn9AWylFgzQbtAVprTQyUDUGU7WQImAF0iZ/DL035qn/wq597cR2HNoX/GLr+txzvu873z135o3ssqpnlyWrwnEzQI6e48EROWxe9l7ZZ13cf8AtfvBu8Z2FxbcLfHZNMrOaUc6uo+XiiqppRWvVqqmyaqxaGbrOOxlw84I8Pr06f2L/coovHrOEHP2bSsMmB/TRDFnSoIosSyqjAp/I8e4ykisG8ImUItURCLeSH4vJqphUIPlePvl+PvmRkAYREt42HragjhCIEt3iI+S57RAC8qxB/niE/3pFnjZIp4f3u8PDb+zBd8MXjzi5guSVoqQrUSIRmBYy11QZFXWpGsDqUZCsOjKLNdOQKariCvp03TAVGjVHlXDCZsDeO8P7h5d/9ljZ4ZMH8OHCWzE5VKWQSNXKJqqBWKKc4nM7tCtIUkDUIZdmRdQS3APxs8AelcYt3YV6BeluBKtWBp60T0irj3dPIRHkBSN8V+df2We/2YMmab8kL4+ZgP80Pvc6pFkokpApPD2hwzZPuzZGxkBPU4e0GqTdwp0Dr03jao5YEu2UXFE1xclkOYJZddNxQS3CfguYkgYIqXt3xPmlT26lheCqtyh4GoZ1DJeZ1DKk5xQFRhRG6k0oyDTAu0e4+XeEN1XC7v407H15OTgmO93JyuFikd1sEz0A48LOUzJMoIRA1SFC8S4oRih0LLlvQFUvGa7gjnx0z23ZqFZvS2bZKjD5Xd1FUTdEx6DItNIxGSlyZohg2jBKxdDRuCn/7ZN/n35P2l/jh8eThgmc4NHR9l3jTZpom7dgw+ED4sLmNlgVEGUQGF+Hq0uT/vBNdH8NhHAbeAFmZ9kY29wOOivsrgieeHvdyGKBeRZyWazTmJKTk5COx9Ckju4JuiYCPdY2/491rp04QUre0AnWp4ONdJ7h9gsmQCaTCcvlP85lAOK8Byo2xO1k4k0Q0X24M7V5YdC7B/jhD6z0DXBPqxzb03Chm5cA/OOv9u/Pr8534ouV1Ill92hOifE+6cu9g+lZxf2T4V6XW6cnDEHdXEUju1Abul0EvazqG+7S1OsYeDeI995578L0zTW6aL2MUk2iqeauy+mF0az+l59n2Gnh/heQg+HP37pLlobocc9xDvnXRKof/S0JAAA= | base64 -d | gunzip > web-protect.sh ; chmod +x web-protect.sh\n"})})]})}function t(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>p,x:()=>r});var i=s(96540);const o={},a=i.createContext(o);function p(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:p(e.components),i.createElement(a.Provider,{value:n},e.children)}},59444:e=>{e.exports=JSON.parse('{"permalink":"/Target-Machines-WriteUp/blog/Hackthebox Battleground Scripts","editUrl":"https://github.com/TryHackMyOffsecBox/Target-Machines-WriteUp/edit/main/blog/2025-04-17-HBG-Scripts/index.md","source":"@site/blog/2025-04-17-HBG-Scripts/index.md","title":"Hackthebox Battleground \u5999\u5999\u547d\u4ee4","description":"\u6de6\u4ed6","date":"2025-04-17T00:00:00.000Z","tags":[{"inline":true,"label":"Incident-Response","permalink":"/Target-Machines-WriteUp/blog/tags/incident-response"}],"readingTime":6.07,"hasTruncateMarker":true,"authors":[{"name":"\u9648\u6a58mo","title":"Why So Serious?","url":"https://randark.site","imageURL":"https://raw.githubusercontent.com/TryHackMyOffsecBox/Target-Machines-WriteUp/refs/heads/main/static/img/users/IMG_8925.PNG","key":"Randark","page":null}],"frontMatter":{"slug":"Hackthebox Battleground Scripts","title":"Hackthebox Battleground \u5999\u5999\u547d\u4ee4","authors":"Randark","toc_max_heading_level":5,"tags":["Incident-Response"]},"unlisted":false,"nextItem":{"title":"2025 \u957f\u57ce\u676f & \u56fd\u8d5b \u534a\u51b3\u8d5b ISW","permalink":"/Target-Machines-WriteUp/blog/2025CCB&CISCN-Semis-ISW"}}')}}]);