"use strict";(self.webpackChunktarget_machines_write_up=self.webpackChunktarget_machines_write_up||[]).push([[5413],{50399:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>C,frontMatter:()=>l,metadata:()=>g,toc:()=>a});const g=JSON.parse('{"id":"ToolsGuide/index","title":"\u5de5\u5177\u6307\u5357","description":"\u73af\u5883\u4fe1\u606f\u6536\u96c6","source":"@site/docs/ToolsGuide/index.md","sourceDirName":"ToolsGuide","slug":"/ToolsGuide/","permalink":"/Target-Machines-WriteUp/docs/ToolsGuide/","draft":false,"unlisted":false,"editUrl":"https://github.com/TryHackMyOffsecBox/Target-Machines-WriteUp/edit/main/docs/ToolsGuide/index.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"ToolsGuide_Sidebar","next":{"title":"hydra","permalink":"/Target-Machines-WriteUp/docs/ToolsGuide/Brute-Forcing/hydra"}}');var c=i(74848),I=i(28453);const l={sidebar_position:0},s="\u5de5\u5177\u6307\u5357",o={},a=[{value:"\u73af\u5883\u4fe1\u606f\u6536\u96c6",id:"\u73af\u5883\u4fe1\u606f\u6536\u96c6",level:2},{value:"Web Service \u4fe1\u606f\u641c\u96c6",id:"web-service-\u4fe1\u606f\u641c\u96c6",level:2},{value:"\u57fa\u7840\u63d0\u6743\u8def\u5f84\u6392\u67e5",id:"\u57fa\u7840\u63d0\u6743\u8def\u5f84\u6392\u67e5",level:2},{value:"\u4e00\u7ad9\u5f0f\u811a\u672c",id:"\u4e00\u7ad9\u5f0f\u811a\u672c",level:2},{value:"\u53c2\u8003\u8d44\u6599",id:"\u53c2\u8003\u8d44\u6599",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,I.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"\u5de5\u5177\u6307\u5357",children:"\u5de5\u5177\u6307\u5357"})}),"\n",(0,c.jsx)(n.h2,{id:"\u73af\u5883\u4fe1\u606f\u6536\u96c6",children:"\u73af\u5883\u4fe1\u606f\u6536\u96c6"}),"\n",(0,c.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,c.jsx)(n.code,{children:"netstat"})," \u67e5\u8be2\u5bf9\u5916\u5f00\u653e\u7aef\u53e3"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"netstat -anopt | grep \":::\" | while read -r line; do pid=$(echo \"$line\" | awk '{print $7}' | cut -d'/' -f1); port=$(echo \"$line\" | awk '{print $4}' | rev | cut -d':' -f1 | rev); cmdline=$(cat /proc/\"$pid\"/cmdline | tr '\\0' ' '); echo -e \"Port: $port, PID: $pid\\n\u2014> Command: $(echo \"$cmdline\" | sed -E 's/(apache2?|nginx|java|python|node|ftp)/\\x1b[31m&\\x1b[0m/g')\"; done\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"echo bmV0c3RhdCAtYW5vcHQgfCBncmVwICI6OjoiIHwgd2hpbGUgcmVhZCAtciBsaW5lOyBkbyBwaWQ9JChlY2hvICIkbGluZSIgfCBhd2sgJ3twcmludCAkN30nIHwgY3V0IC1kJy8nIC1mMSk7IHBvcnQ9JChlY2hvICIkbGluZSIgfCBhd2sgJ3twcmludCAkNH0nIHwgcmV2IHwgY3V0IC1kJzonIC1mMSB8IHJldik7IGNtZGxpbmU9JChjYXQgL3Byb2MvIiRwaWQiL2NtZGxpbmUgfCB0ciAnXDAnICcgJyk7IGVjaG8gLWUgIlBvcnQ6ICRwb3J0LCBQSUQ6ICRwaWRcbuKAlD4gQ29tbWFuZDogJChlY2hvICIkY21kbGluZSIgfCBzZWQgLUUgJ3MvKGFwYWNoZTI/fG5naW54fGphdmF8cHl0aG9ufG5vZGV8ZnRwKS9ceDFiWzMxbSZceDFiWzBtL2cnKSI7IGRvbmU= | base64 -d | bash\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,c.jsx)(n.code,{children:"ss"})," \u914d\u5408 ",(0,c.jsx)(n.code,{children:"lsof"})]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"ss -tuln | grep LISTEN | grep \"0.0.0.0\" | while read -r line; do port=$(echo \"$line\" | awk '{print $5}' | rev | cut -d':' -f1 | rev); pid=$(lsof -i :$port | grep LISTEN | awk '{print $2}' | head -n 1); [ -n \"$pid\" ] && cmdline=$(cat /proc/$pid/cmdline | tr '\\0' ' ') && echo -e \"Port: $port, PID: $pid\\n\u2014> Command: $(echo \"$cmdline\" | sed -E 's/(apache2?|nginx|java|python|node|ftp)/\\x1b[31m&\\x1b[0m/g')\" || echo -e \"Port: $port, PID: Not found\\n\u2014> Command: Not available\"; done\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"echo c3MgLXR1bG4gfCBncmVwIExJU1RFTiB8IGdyZXAgIjAuMC4wLjAiIHwgd2hpbGUgcmVhZCAtciBsaW5lOyBkbyBwb3J0PSQoZWNobyAiJGxpbmUiIHwgYXdrICd7cHJpbnQgJDV9JyB8IHJldiB8IGN1dCAtZCc6JyAtZjEgfCByZXYpOyBwaWQ9JChsc29mIC1pIDokcG9ydCB8IGdyZXAgTElTVEVOIHwgYXdrICd7cHJpbnQgJDJ9JyB8IGhlYWQgLW4gMSk7IFsgLW4gIiRwaWQiIF0gJiYgY21kbGluZT0kKGNhdCAvcHJvYy8kcGlkL2NtZGxpbmUgfCB0ciAnXDAnICcgJykgJiYgZWNobyAtZSAiUG9ydDogJHBvcnQsIFBJRDogJHBpZFxu4oCUPiBDb21tYW5kOiAkKGVjaG8gIiRjbWRsaW5lIiB8IHNlZCAtRSAncy8oYXBhY2hlMj98bmdpbnh8amF2YXxweXRob258bm9kZXxmdHApL1x4MWJbMzFtJlx4MWJbMG0vZycpIiB8fCBlY2hvIC1lICJQb3J0OiAkcG9ydCwgUElEOiBOb3QgZm91bmRcbuKAlD4gQ29tbWFuZDogTm90IGF2YWlsYWJsZSI7IGRvbmU= | base64 -d | bash\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,c.jsx)(n.code,{children:"lsof"})]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'lsof -i | grep "*:"\n'})}),"\n",(0,c.jsx)(n.h2,{id:"web-service-\u4fe1\u606f\u641c\u96c6",children:"Web Service \u4fe1\u606f\u641c\u96c6"}),"\n",(0,c.jsx)(n.p,{children:"\u9488\u5bf9 apache2 \u670d\u52a1\u67e5\u8be2\u89e3\u6790\u914d\u7f6e"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"sed -n '/ServerName/p; /ServerAlias/p; /DocumentRoot/p' /etc/apache2/sites-enabled/*\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u9488\u5bf9 nginx \u670d\u52a1\u67e5\u8be2\u89e3\u6790\u914d\u7f6e"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"sed -n '/server_name/p; /root/p' /etc/nginx/sites-enabled/*\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u9488\u5bf9 nginx \u670d\u52a1\u67e5\u8be2\u89e3\u6790\u914d\u7f6e\uff0c\u5e76\u81ea\u52a8\u751f\u6210 hosts \u8bb0\u5f55"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'ip=$(ip -4 addr show eth0 | grep -oP \'(?<=inet\\s)\\d+(\\.\\d+){3}\') && all_hosts="" && for file in /etc/nginx/sites-enabled/*; do server_names=$(sed -n \'/^\\s*server_name\\s.*;\\s*$/p\' "$file" | awk -F \'server_name\' \'{print $2}\' | sed \'s/;//g\' | tr -s \' \'); root_dir=$(sed -n \'/^\\s*root\\s.*;\\s*$/p\' "$file" | awk \'{print $2}\' | sed \'s/;//g\'); if [ -n "$server_names" ]; then echo -e "File: $file\\nRoot: $root_dir\\nHosts:" && echo "$server_names" | awk -v ip="$ip" \'{print ip, $0}\'; all_hosts+="$(echo "$server_names" | awk -v ip="$ip" \'{print ip, $0}\')\\n"; echo "\u2014\u2014\u2014"; fi; done && echo -e "\\nUnique Hosts:" && echo -e "$all_hosts" | sort | uniq\n'})}),"\n",(0,c.jsx)(n.p,{children:"\u5feb\u901f\u641c\u7d22\u9ad8\u5371\u547d\u4ee4\u6267\u884c\u51fd\u6570"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'grep -r -n -E --include="*.php" "(eval\\(|exec\\(|system\\(|passthru\\(|shell_exec\\(|popen\\(|proc_open\\(|assert\\(|create_function\\(|preg_replace\\s*\\(.*/e)" /var/www | awk -F: \'{print "File: " $1 "\\nLine: " $2 "\\nCode: " $3 "\\n"}\'\n'})}),"\n",(0,c.jsx)(n.h2,{id:"\u57fa\u7840\u63d0\u6743\u8def\u5f84\u6392\u67e5",children:"\u57fa\u7840\u63d0\u6743\u8def\u5f84\u6392\u67e5"}),"\n",(0,c.jsx)(n.p,{children:"\u5217\u51fa sudo \u53ef\u6267\u884c\u8303\u56f4"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"sudo -l\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u5bfb\u627e suid \u7279\u6b8a\u6587\u4ef6"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"find / -perm -u=s -type f -executable 2>/dev/null\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u5bfb\u627e\u7279\u6b8a\u7a0b\u5e8f\u80fd\u529b"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"getcap -r / 2>/dev/null\n"})}),"\n",(0,c.jsx)(n.h2,{id:"\u4e00\u7ad9\u5f0f\u811a\u672c",children:"\u4e00\u7ad9\u5f0f\u811a\u672c"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# Function to check if a command exists\ncheck_command() {\n    if command -v $1 &> /dev/null; then\n        return 0\n    else\n        return 1\n    fi\n}\n\n# Check if ss and lsof exist\nif check_command ss && check_command lsof; then\n    echo "Detected ss and lsof, executing related commands..."\n    ss -tuln | grep LISTEN | grep "0.0.0.0" | while read -r line; do\n        port=$(echo "$line" | awk \'{print $5}\' | rev | cut -d\':\' -f1 | rev)\n        pid=$(lsof -i :$port | grep LISTEN | awk \'{print $2}\' | head -n 1)\n        if [ -n "$pid" ]; then\n            cmdline=$(cat /proc/$pid/cmdline | tr \'\\0\' \' \')\n            echo -e "Port: $port, PID: $pid\\n\u2014> Command: $(echo "$cmdline" | sed -E \'s/(apache2?|nginx|java|python|node|ftp)/\\x1b[31m&\\x1b[0m/g\')"\n        else\n            echo -e "Port: $port, PID: Not found\\n\u2014> Command: Not available"\n        fi\n    done\n# Check if netstat exists\nelif check_command netstat; then\n    echo "Detected netstat, executing related commands..."\n    netstat -anopt | grep ":::" | while read -r line; do\n        pid=$(echo "$line" | awk \'{print $7}\' | cut -d\'/\' -f1)\n        port=$(echo "$line" | awk \'{print $4}\' | rev | cut -d\':\' -f1 | rev)\n        cmdline=$(cat /proc/"$pid"/cmdline | tr \'\\0\' \' \')\n        echo -e "Port: $port, PID: $pid\\n\u2014> Command: $(echo "$cmdline" | sed -E \'s/(apache2?|nginx|java|python|node|ftp)/\\x1b[31m&\\x1b[0m/g\')"\n    done\n# If none of the commands exist\nelse\n    echo -e "\\x1b[31mWarning: Neither ss, lsof, nor netstat commands were found. The script cannot proceed.\\x1b[0m"\n    exit 1\nfi\n\n# Output a separator\necho -e "\\n## \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 ##\\n"\n\n# Check if nginx exists\nif check_command nginx; then\n    echo "Detected nginx, analyzing its configuration..."\n\n    # Get the first non-loopback network interface\n    interface=$(ip -4 addr show | grep -v \' lo:\' | awk \'/^[0-9]+:/ {print $2}\' | cut -d\':\' -f1 | head -n 1)\n\n    # Get the IP address of the first non-loopback interface\n    ip=$(ip -4 addr show "$interface" | grep -oP \'(?<=inet\\s)\\d+(\\.\\d+){3}\')\n\n    # Initialize a variable to store all hosts\n    all_hosts=""\n\n    # Loop through all enabled nginx configuration files\n    for file in /etc/nginx/sites-enabled/*; do\n        # Extract server_names and root directory\n        server_names=$(sed -n \'/^\\s*server_name\\s.*;\\s*$/p\' "$file" | awk -F \'server_name\' \'{print $2}\' | sed \'s/;//g\' | tr -s \' \')\n        root_dir=$(sed -n \'/^\\s*root\\s.*;\\s*$/p\' "$file" | awk \'{print $2}\' | sed \'s/;//g\')\n\n        # If server_names are found, print the details\n        if [ -n "$server_names" ]; then\n            echo -e "File: $file\\nRoot: $root_dir\\nHosts:"\n            echo "$server_names" | awk -v ip="$ip" \'{print ip, $0}\'\n            all_hosts+="$(echo "$server_names" | awk -v ip="$ip" \'{print ip, $0}\')\\n"\n            echo "\u2014\u2014\u2014"\n        fi\n    done\n\n    # Print unique hosts\n    echo -e "\\nUnique Hosts:"\n    echo -e "$all_hosts" | sort | uniq\nelse\n    echo "Nginx is not installed."\nfi\n\n# Output a separator\necho -e "\\n## \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 ##\\n"\n\n# Check if apache (httpd) exists\nif check_command apache2 || check_command httpd; then\n    echo "Detected apache, analyzing its configuration..."\n\n    # Get the first non-loopback network interface\n    interface=$(ip -4 addr show | grep -v \' lo:\' | awk \'/^[0-9]+:/ {print $2}\' | cut -d\':\' -f1 | head -n 1)\n\n    # Get the IP address of the first non-loopback interface\n    ip=$(ip -4 addr show "$interface" | grep -oP \'(?<=inet\\s)\\d+(\\.\\d+){3}\')\n\n    # Initialize a variable to store all hosts\n    all_hosts=""\n\n    # Loop through all enabled apache configuration files\n    for file in /etc/apache2/sites-enabled/*; do\n        # Extract ServerName and ServerAlias\n        server_name=$(sed -n \'/^\\s*ServerName\\s.*$/p\' "$file" | awk \'{print $2}\')\n        server_aliases=$(sed -n \'/^\\s*ServerAlias\\s.*$/p\' "$file" | awk \'{print $2}\')\n\n        # Combine ServerName and ServerAlias\n        if [ -n "$server_name" ]; then\n            hosts="$server_name"\n            if [ -n "$server_aliases" ]; then\n                hosts+=" $server_aliases"\n            fi\n\n            # Extract DocumentRoot\n            document_root=$(sed -n \'/^\\s*DocumentRoot\\s.*$/p\' "$file" | awk \'{print $2}\')\n\n            # Print the details\n            echo -e "File: $file\\nDocumentRoot: $document_root\\nHosts:"\n            echo "$hosts" | tr \' \' \'\\n\' | awk -v ip="$ip" \'{print ip, $0}\'\n            all_hosts+="$(echo "$hosts" | tr \' \' \'\\n\' | awk -v ip="$ip" \'{print ip, $0}\')\\n"\n            echo "\u2014\u2014\u2014"\n        fi\n    done\n\n    # Print unique hosts\n    echo -e "\\nUnique Hosts:"\n    echo -e "$all_hosts" | sort | uniq\nelse\n    echo "Apache is not installed."\nfi\n\n# Output a separator\necho -e "\\n## \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 ##\\n"\n\n# Check /etc/sudoers file (excluding comments)\necho "Checking /etc/sudoers (active configurations only):"\ngrep -v \'^#\' /etc/sudoers | grep -v \'^$\' | sed \'s/^/  /\'\necho "\u2014\u2014\u2014"\n\n# Find SUID files\necho "Finding SUID files:"\nfind / -perm -u=s -type f -executable 2>/dev/null\necho "\u2014\u2014\u2014"\n\n# Find files with special capabilities\necho "Finding files with special capabilities:"\ngetcap -r / 2>/dev/null | sed \'s/^/  /\'\necho "\u2014\u2014\u2014"\n'})}),"\n",(0,c.jsx)(n.p,{children:"\u66f4\u7b80\u5355\u4e00\u70b9\uff0c\u4e00\u884c\u6267\u884c"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"echo IyEvYmluL2Jhc2gKCiMgRnVuY3Rpb24gdG8gY2hlY2sgaWYgYSBjb21tYW5kIGV4aXN0cwpjaGVja19jb21tYW5kKCkgewogICAgaWYgY29tbWFuZCAtdiAkMSAmPiAvZGV2L251bGw7IHRoZW4KICAgICAgICByZXR1cm4gMAogICAgZWxzZQogICAgICAgIHJldHVybiAxCiAgICBmaQp9CgojIENoZWNrIGlmIHNzIGFuZCBsc29mIGV4aXN0CmlmIGNoZWNrX2NvbW1hbmQgc3MgJiYgY2hlY2tfY29tbWFuZCBsc29mOyB0aGVuCiAgICBlY2hvICJEZXRlY3RlZCBzcyBhbmQgbHNvZiwgZXhlY3V0aW5nIHJlbGF0ZWQgY29tbWFuZHMuLi4iCiAgICBzcyAtdHVsbiB8IGdyZXAgTElTVEVOIHwgZ3JlcCAiMC4wLjAuMCIgfCB3aGlsZSByZWFkIC1yIGxpbmU7IGRvCiAgICAgICAgcG9ydD0kKGVjaG8gIiRsaW5lIiB8IGF3ayAne3ByaW50ICQ1fScgfCByZXYgfCBjdXQgLWQnOicgLWYxIHwgcmV2KQogICAgICAgIHBpZD0kKGxzb2YgLWkgOiRwb3J0IHwgZ3JlcCBMSVNURU4gfCBhd2sgJ3twcmludCAkMn0nIHwgaGVhZCAtbiAxKQogICAgICAgIGlmIFsgLW4gIiRwaWQiIF07IHRoZW4KICAgICAgICAgICAgY21kbGluZT0kKGNhdCAvcHJvYy8kcGlkL2NtZGxpbmUgfCB0ciAnXDAnICcgJykKICAgICAgICAgICAgZWNobyAtZSAiUG9ydDogJHBvcnQsIFBJRDogJHBpZFxu4oCUPiBDb21tYW5kOiAkKGVjaG8gIiRjbWRsaW5lIiB8IHNlZCAtRSAncy8oYXBhY2hlMj98bmdpbnh8amF2YXxweXRob258bm9kZXxmdHApL1x4MWJbMzFtJlx4MWJbMG0vZycpIgogICAgICAgIGVsc2UKICAgICAgICAgICAgZWNobyAtZSAiUG9ydDogJHBvcnQsIFBJRDogTm90IGZvdW5kXG7igJQ+IENvbW1hbmQ6IE5vdCBhdmFpbGFibGUiCiAgICAgICAgZmkKICAgIGRvbmUKIyBDaGVjayBpZiBuZXRzdGF0IGV4aXN0cwplbGlmIGNoZWNrX2NvbW1hbmQgbmV0c3RhdDsgdGhlbgogICAgZWNobyAiRGV0ZWN0ZWQgbmV0c3RhdCwgZXhlY3V0aW5nIHJlbGF0ZWQgY29tbWFuZHMuLi4iCiAgICBuZXRzdGF0IC1hbm9wdCB8IGdyZXAgIjo6OiIgfCB3aGlsZSByZWFkIC1yIGxpbmU7IGRvCiAgICAgICAgcGlkPSQoZWNobyAiJGxpbmUiIHwgYXdrICd7cHJpbnQgJDd9JyB8IGN1dCAtZCcvJyAtZjEpCiAgICAgICAgcG9ydD0kKGVjaG8gIiRsaW5lIiB8IGF3ayAne3ByaW50ICQ0fScgfCByZXYgfCBjdXQgLWQnOicgLWYxIHwgcmV2KQogICAgICAgIGNtZGxpbmU9JChjYXQgL3Byb2MvIiRwaWQiL2NtZGxpbmUgfCB0ciAnXDAnICcgJykKICAgICAgICBlY2hvIC1lICJQb3J0OiAkcG9ydCwgUElEOiAkcGlkXG7igJQ+IENvbW1hbmQ6ICQoZWNobyAiJGNtZGxpbmUiIHwgc2VkIC1FICdzLyhhcGFjaGUyP3xuZ2lueHxqYXZhfHB5dGhvbnxub2RlfGZ0cCkvXHgxYlszMW0mXHgxYlswbS9nJykiCiAgICBkb25lCiMgSWYgbm9uZSBvZiB0aGUgY29tbWFuZHMgZXhpc3QKZWxzZQogICAgZWNobyAtZSAiXHgxYlszMW1XYXJuaW5nOiBOZWl0aGVyIHNzLCBsc29mLCBub3IgbmV0c3RhdCBjb21tYW5kcyB3ZXJlIGZvdW5kLiBUaGUgc2NyaXB0IGNhbm5vdCBwcm9jZWVkLlx4MWJbMG0iCiAgICBleGl0IDEKZmkKCiMgT3V0cHV0IGEgc2VwYXJhdG9yCmVjaG8gLWUgIlxuIyMg4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCUICMjXG4iCgojIENoZWNrIGlmIG5naW54IGV4aXN0cwppZiBjaGVja19jb21tYW5kIG5naW54OyB0aGVuCiAgICBlY2hvICJEZXRlY3RlZCBuZ2lueCwgYW5hbHl6aW5nIGl0cyBjb25maWd1cmF0aW9uLi4uIgoKICAgICMgR2V0IHRoZSBmaXJzdCBub24tbG9vcGJhY2sgbmV0d29yayBpbnRlcmZhY2UKICAgIGludGVyZmFjZT0kKGlwIC00IGFkZHIgc2hvdyB8IGdyZXAgLXYgJyBsbzonIHwgYXdrICcvXlswLTldKzovIHtwcmludCAkMn0nIHwgY3V0IC1kJzonIC1mMSB8IGhlYWQgLW4gMSkKCiAgICAjIEdldCB0aGUgSVAgYWRkcmVzcyBvZiB0aGUgZmlyc3Qgbm9uLWxvb3BiYWNrIGludGVyZmFjZQogICAgaXA9JChpcCAtNCBhZGRyIHNob3cgIiRpbnRlcmZhY2UiIHwgZ3JlcCAtb1AgJyg/PD1pbmV0XHMpXGQrKFwuXGQrKXszfScpCgogICAgIyBJbml0aWFsaXplIGEgdmFyaWFibGUgdG8gc3RvcmUgYWxsIGhvc3RzCiAgICBhbGxfaG9zdHM9IiIKCiAgICAjIExvb3AgdGhyb3VnaCBhbGwgZW5hYmxlZCBuZ2lueCBjb25maWd1cmF0aW9uIGZpbGVzCiAgICBmb3IgZmlsZSBpbiAvZXRjL25naW54L3NpdGVzLWVuYWJsZWQvKjsgZG8KICAgICAgICAjIEV4dHJhY3Qgc2VydmVyX25hbWVzIGFuZCByb290IGRpcmVjdG9yeQogICAgICAgIHNlcnZlcl9uYW1lcz0kKHNlZCAtbiAnL15ccypzZXJ2ZXJfbmFtZVxzLio7XHMqJC9wJyAiJGZpbGUiIHwgYXdrIC1GICdzZXJ2ZXJfbmFtZScgJ3twcmludCAkMn0nIHwgc2VkICdzLzsvL2cnIHwgdHIgLXMgJyAnKQogICAgICAgIHJvb3RfZGlyPSQoc2VkIC1uICcvXlxzKnJvb3Rccy4qO1xzKiQvcCcgIiRmaWxlIiB8IGF3ayAne3ByaW50ICQyfScgfCBzZWQgJ3MvOy8vZycpCgogICAgICAgICMgSWYgc2VydmVyX25hbWVzIGFyZSBmb3VuZCwgcHJpbnQgdGhlIGRldGFpbHMKICAgICAgICBpZiBbIC1uICIkc2VydmVyX25hbWVzIiBdOyB0aGVuCiAgICAgICAgICAgIGVjaG8gLWUgIkZpbGU6ICRmaWxlXG5Sb290OiAkcm9vdF9kaXJcbkhvc3RzOiIKICAgICAgICAgICAgZWNobyAiJHNlcnZlcl9uYW1lcyIgfCBhd2sgLXYgaXA9IiRpcCIgJ3twcmludCBpcCwgJDB9JwogICAgICAgICAgICBhbGxfaG9zdHMrPSIkKGVjaG8gIiRzZXJ2ZXJfbmFtZXMiIHwgYXdrIC12IGlwPSIkaXAiICd7cHJpbnQgaXAsICQwfScpXG4iCiAgICAgICAgICAgIGVjaG8gIuKAlOKAlOKAlCIKICAgICAgICBmaQogICAgZG9uZQoKICAgICMgUHJpbnQgdW5pcXVlIGhvc3RzCiAgICBlY2hvIC1lICJcblVuaXF1ZSBIb3N0czoiCiAgICBlY2hvIC1lICIkYWxsX2hvc3RzIiB8IHNvcnQgfCB1bmlxCmVsc2UKICAgIGVjaG8gIk5naW54IGlzIG5vdCBpbnN0YWxsZWQuIgpmaQoKIyBPdXRwdXQgYSBzZXBhcmF0b3IKZWNobyAtZSAiXG4jIyDigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJQgIyNcbiIKCiMgQ2hlY2sgaWYgYXBhY2hlIChodHRwZCkgZXhpc3RzCmlmIGNoZWNrX2NvbW1hbmQgYXBhY2hlMiB8fCBjaGVja19jb21tYW5kIGh0dHBkOyB0aGVuCiAgICBlY2hvICJEZXRlY3RlZCBhcGFjaGUsIGFuYWx5emluZyBpdHMgY29uZmlndXJhdGlvbi4uLiIKCiAgICAjIEdldCB0aGUgZmlyc3Qgbm9uLWxvb3BiYWNrIG5ldHdvcmsgaW50ZXJmYWNlCiAgICBpbnRlcmZhY2U9JChpcCAtNCBhZGRyIHNob3cgfCBncmVwIC12ICcgbG86JyB8IGF3ayAnL15bMC05XSs6LyB7cHJpbnQgJDJ9JyB8IGN1dCAtZCc6JyAtZjEgfCBoZWFkIC1uIDEpCgogICAgIyBHZXQgdGhlIElQIGFkZHJlc3Mgb2YgdGhlIGZpcnN0IG5vbi1sb29wYmFjayBpbnRlcmZhY2UKICAgIGlwPSQoaXAgLTQgYWRkciBzaG93ICIkaW50ZXJmYWNlIiB8IGdyZXAgLW9QICcoPzw9aW5ldFxzKVxkKyhcLlxkKyl7M30nKQoKICAgICMgSW5pdGlhbGl6ZSBhIHZhcmlhYmxlIHRvIHN0b3JlIGFsbCBob3N0cwogICAgYWxsX2hvc3RzPSIiCgogICAgIyBMb29wIHRocm91Z2ggYWxsIGVuYWJsZWQgYXBhY2hlIGNvbmZpZ3VyYXRpb24gZmlsZXMKICAgIGZvciBmaWxlIGluIC9ldGMvYXBhY2hlMi9zaXRlcy1lbmFibGVkLyo7IGRvCiAgICAgICAgIyBFeHRyYWN0IFNlcnZlck5hbWUgYW5kIFNlcnZlckFsaWFzCiAgICAgICAgc2VydmVyX25hbWU9JChzZWQgLW4gJy9eXHMqU2VydmVyTmFtZVxzLiokL3AnICIkZmlsZSIgfCBhd2sgJ3twcmludCAkMn0nKQogICAgICAgIHNlcnZlcl9hbGlhc2VzPSQoc2VkIC1uICcvXlxzKlNlcnZlckFsaWFzXHMuKiQvcCcgIiRmaWxlIiB8IGF3ayAne3ByaW50ICQyfScpCgogICAgICAgICMgQ29tYmluZSBTZXJ2ZXJOYW1lIGFuZCBTZXJ2ZXJBbGlhcwogICAgICAgIGlmIFsgLW4gIiRzZXJ2ZXJfbmFtZSIgXTsgdGhlbgogICAgICAgICAgICBob3N0cz0iJHNlcnZlcl9uYW1lIgogICAgICAgICAgICBpZiBbIC1uICIkc2VydmVyX2FsaWFzZXMiIF07IHRoZW4KICAgICAgICAgICAgICAgIGhvc3RzKz0iICRzZXJ2ZXJfYWxpYXNlcyIKICAgICAgICAgICAgZmkKCiAgICAgICAgICAgICMgRXh0cmFjdCBEb2N1bWVudFJvb3QKICAgICAgICAgICAgZG9jdW1lbnRfcm9vdD0kKHNlZCAtbiAnL15ccypEb2N1bWVudFJvb3Rccy4qJC9wJyAiJGZpbGUiIHwgYXdrICd7cHJpbnQgJDJ9JykKCiAgICAgICAgICAgICMgUHJpbnQgdGhlIGRldGFpbHMKICAgICAgICAgICAgZWNobyAtZSAiRmlsZTogJGZpbGVcbkRvY3VtZW50Um9vdDogJGRvY3VtZW50X3Jvb3Rcbkhvc3RzOiIKICAgICAgICAgICAgZWNobyAiJGhvc3RzIiB8IHRyICcgJyAnXG4nIHwgYXdrIC12IGlwPSIkaXAiICd7cHJpbnQgaXAsICQwfScKICAgICAgICAgICAgYWxsX2hvc3RzKz0iJChlY2hvICIkaG9zdHMiIHwgdHIgJyAnICdcbicgfCBhd2sgLXYgaXA9IiRpcCIgJ3twcmludCBpcCwgJDB9JylcbiIKICAgICAgICAgICAgZWNobyAi4oCU4oCU4oCUIgogICAgICAgIGZpCiAgICBkb25lCgogICAgIyBQcmludCB1bmlxdWUgaG9zdHMKICAgIGVjaG8gLWUgIlxuVW5pcXVlIEhvc3RzOiIKICAgIGVjaG8gLWUgIiRhbGxfaG9zdHMiIHwgc29ydCB8IHVuaXEKZWxzZQogICAgZWNobyAiQXBhY2hlIGlzIG5vdCBpbnN0YWxsZWQuIgpmaQoKIyBPdXRwdXQgYSBzZXBhcmF0b3IKZWNobyAtZSAiXG4jIyDigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJQgIyNcbiIKCiMgQ2hlY2sgL2V0Yy9zdWRvZXJzIGZpbGUgKGV4Y2x1ZGluZyBjb21tZW50cykKZWNobyAiQ2hlY2tpbmcgL2V0Yy9zdWRvZXJzIChhY3RpdmUgY29uZmlndXJhdGlvbnMgb25seSk6IgpncmVwIC12ICdeIycgL2V0Yy9zdWRvZXJzIHwgZ3JlcCAtdiAnXiQnIHwgc2VkICdzL14vICAvJwplY2hvICLigJTigJTigJQiCgojIEZpbmQgU1VJRCBmaWxlcwplY2hvICJGaW5kaW5nIFNVSUQgZmlsZXM6IgpmaW5kIC8gLXBlcm0gLXU9cyAtdHlwZSBmIC1leGVjdXRhYmxlIDI+L2Rldi9udWxsCmVjaG8gIuKAlOKAlOKAlCIKCiMgRmluZCBmaWxlcyB3aXRoIHNwZWNpYWwgY2FwYWJpbGl0aWVzCmVjaG8gIkZpbmRpbmcgZmlsZXMgd2l0aCBzcGVjaWFsIGNhcGFiaWxpdGllczoiCmdldGNhcCAtciAvIDI+L2Rldi9udWxsIHwgc2VkICdzL14vICAvJwplY2hvICLigJTigJTigJQi | base64 -d | bash\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u4f7f\u7528 gzip \u8fdb\u4e00\u6b65\u538b\u7f29\u4f53\u79ef"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"echo 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 | base64 -d | gunzip | bash\n"})}),"\n",(0,c.jsx)(n.h2,{id:"\u53c2\u8003\u8d44\u6599",children:"\u53c2\u8003\u8d44\u6599"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://exploit-notes.hdks.org/exploit/linux/privilege-escalation/",children:"Linux Privilege Escalation | Exploit Notes"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://exploit-notes.hdks.org/",children:"Exploit Notes"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://j4ckie0x17.gitbook.io/notes-pentesting",children:"whoami | J4ckie0x17"})})]})}function C(e={}){const{wrapper:n}={...(0,I.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var g=i(96540);const c={},I=g.createContext(c);function l(e){const n=g.useContext(I);return g.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),g.createElement(I.Provider,{value:n},e.children)}}}]);